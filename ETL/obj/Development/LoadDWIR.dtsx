<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/21/2017 6:37:18 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-TCIELA37"
  DTS:CreatorName="LAPTOP-TCIELA37\gabri"
  DTS:DTSID="{E444C19D-6844-4235-B585-E8D83504D291}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="14.0.1000.169"
  DTS:LocaleID="1046"
  DTS:ObjectName="LoadDWIR"
  DTS:PackageType="5"
  DTS:VersionBuild="137"
  DTS:VersionGUID="{3F0BDC79-F36E-4468-BB2A-6B431A9413D4}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Clear dimTransacaoIRNaoConciliada"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{BCD9F250-DF49-4493-9569-93829F18BA28}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear dimTransacaoIRNaoConciliada"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="delete from dimTransacaoIRIlegivel where IDERP in (&#xA;&#x9;&#x9;&#x9;&#x9;select a.IDERP&#xA;&#x9;&#x9;&#x9;&#x9;from dimTransacaoIRIlegivel a&#xA;&#x9;&#x9;&#x9;&#x9;inner join dimTransacaoIR b on a.IDERP = b.IDERP&#xA;&#x9;&#x9;&#x9;&#x9;)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clear DS"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{49F72943-560B-4281-B774-D908B04AB77D}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear DS"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="insert into dsCancelamentoHist&#xA;select * from dsCancelamento&#xA;&#xA;insert into dsTransacaoIRHist&#xA;select * from dsTransacaoIR&#xA;&#xA;insert into dsTransacaoAdquirenteHist&#xA;select * from dsTransacaoAdquirente&#xA;&#xA;insert into dsFluxoCaixaHist&#xA;select * &#xA;from dsFluxoCaixa&#xA;&#xA;truncate table dsTransacaoIR&#xA;truncate table dsTransacaoAdquirente&#xA;truncate table dsCancelamento&#xA;truncate table dsFluxoCaixa" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Clear DS Sales IR"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0498DB47-2B38-44D3-9661-93DD73019185}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Clear DS Sales IR"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="insert into dsVendaAtivaBiletoHist&#xA;select * from dsVendaAtivaBileto&#xA;truncate table dsVendaAtivaBileto&#xA;&#xA;insert into dsVendaCanceladaBiletoHist&#xA;select * from dsVendaCanceladaBileto&#xA;truncate table dsVendaCanceladaBileto&#xA;&#xA;insert into dsVendaAtivaLegadoHist&#xA;select * from dsVendaAtivaLegado&#xA;truncate table dsVendaAtivaLegado&#xA;&#xA;insert into dsVendaCanceladaLegadoHist&#xA;select * from dsVendaCanceladaLegado&#xA;truncate table dsVendaCanceladaLegado" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimAdquirente"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{3750EB55-2FDC-4D87-967A-8C96AA5BDE0B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimAdquirente"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="MERGE INTO dimAdquirente AS Target&#xA;USING (&#xA;&#x9;&#x9;SELECT distinct  [Adquirente]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[Estabelecimento]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[NroTerminal]&#xA;&#x9;&#x9;  FROM [dbo].dsTransacaoAdquirente&#xA;) AS Source ([Adquirente]&#xA;&#x9;&#x9;&#x9;,[Estabelecimento]&#xA;&#x9;&#x9;&#x9;,[NroTerminal]&#xA;&#x9;&#x9;&#x9;)&#xA;ON (Target.[Adquirente]  = Source.[Adquirente] &#xA;&#x9;and Target.[Estabelecimento]  = Source.[Estabelecimento]&#xA;&#x9;and Target.[NumeroTerminal]  = Source.[NroTerminal])&#xA;&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA; INSERT ([Adquirente]&#xA;&#x9;&#x9;,[Estabelecimento]&#xA;&#x9;&#x9;,[NumeroTerminal])&#xA; VALUES (Source.[Adquirente] &#xA;&#x9;&#x9;,Source.[Estabelecimento]&#xA;&#x9;&#x9;,Source.[NroTerminal]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimCancelamento"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{F321B5AB-E927-4EA7-BE79-E1CE7D2E1FE9}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimCancelamento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="&#xA;MERGE INTO dimCancelamento AS Target&#xA;USING (&#xA;&#x9;&#x9;SELECT distinct [TipoCancelamento]&#xA;&#x9;&#x9;  ,[NroAutorizacao]&#xA;&#x9;&#x9;  ,[IDERP]&#xA;&#x9;&#x9;  ,[Estabelecimento]&#xA;&#x9;&#x9;  ,[CategoriaEstabelecimento]&#xA;&#x9;&#x9;  ,[Adquirente]&#xA;&#x9;&#x9;  ,[Bandeira]&#xA;&#x9;&#x9;  ,[Tipo]&#xA;&#x9;&#x9;  ,[Produto]&#xA;&#x9;&#x9;  ,[Localizador]&#xA;&#x9;&#x9;  ,[NroTerminal]&#xA;&#x9;&#x9;  ,[LoteRO]&#xA;&#x9;&#x9;  ,[LoteUnico]&#xA;&#x9;&#x9;  ,[NrSequencia]&#xA;&#x9;&#x9;  ,[NrReferenciaPedido]&#xA;&#x9;&#x9;  ,[DtCaptura]&#xA;&#x9;&#x9;  ,[DtVenda]&#xA;&#x9;&#x9;  ,[DtCancelamento]&#xA;&#x9;&#x9;  ,[NroCartao]&#xA;&#x9;&#x9;  ,[NSU]&#xA;&#x9;&#x9;  ,[TID]&#xA;&#x9;&#x9;  ,[Parc]&#xA;&#x9;&#x9;  ,[VlrBruto]&#xA;&#x9;&#x9;  ,[VlrComissao]&#xA;&#x9;&#x9;  ,[VlrLiquido]&#xA;&#x9;&#x9;  ,[VlrBrutoCancelamento]&#xA;&#x9;&#x9;  ,[VlrLiquidoCancelamento]&#xA;&#x9;&#x9;  ,[MotivoCancelamento]&#xA;&#x9;&#x9;  ,[Conciliacao]&#xA;&#x9;&#x9;  ,[IDERPCanal]&#xA;&#x9;&#x9;  ,[NomeCanal]&#xA;&#x9;&#x9;  ,[NomeTarefa]&#xA;&#x9;&#x9;  ,[SituacaoTarefa]&#xA;&#x9;  FROM [dbo].[dsCancelamento]&#xA;) AS Source ([TipoCancelamento]&#xA;&#x9;&#x9;  ,[NroAutorizacao]&#xA;&#x9;&#x9;  ,[IDERP]&#xA;&#x9;&#x9;  ,[Estabelecimento]&#xA;&#x9;&#x9;  ,[CategoriaEstabelecimento]&#xA;&#x9;&#x9;  ,[Adquirente]&#xA;&#x9;&#x9;  ,[Bandeira]&#xA;&#x9;&#x9;  ,[Tipo]&#xA;&#x9;&#x9;  ,[Produto]&#xA;&#x9;&#x9;  ,[Localizador]&#xA;&#x9;&#x9;  ,[NroTerminal]&#xA;&#x9;&#x9;  ,[LoteRO]&#xA;&#x9;&#x9;  ,[LoteUnico]&#xA;&#x9;&#x9;  ,[NrSequencia]&#xA;&#x9;&#x9;  ,[NrReferenciaPedido]&#xA;&#x9;&#x9;  ,[DtCaptura]&#xA;&#x9;&#x9;  ,[DtVenda]&#xA;&#x9;&#x9;  ,[DtCancelamento]&#xA;&#x9;&#x9;  ,[NroCartao]&#xA;&#x9;&#x9;  ,[NSU]&#xA;&#x9;&#x9;  ,[TID]&#xA;&#x9;&#x9;  ,[Parc]&#xA;&#x9;&#x9;  ,[VlrBruto]&#xA;&#x9;&#x9;  ,[VlrComissao]&#xA;&#x9;&#x9;  ,[VlrLiquido]&#xA;&#x9;&#x9;  ,[VlrBrutoCancelamento]&#xA;&#x9;&#x9;  ,[VlrLiquidoCancelamento]&#xA;&#x9;&#x9;  ,[MotivoCancelamento]&#xA;&#x9;&#x9;  ,[Conciliacao]&#xA;&#x9;&#x9;  ,[IDERPCanal]&#xA;&#x9;&#x9;  ,[NomeCanal]&#xA;&#x9;&#x9;  ,[NomeTarefa]&#xA;&#x9;&#x9;  ,[SituacaoTarefa]&#xA;&#x9;&#x9;&#x9;)&#xA;ON (Target.TipoCancelamento  = Source.TipoCancelamento&#xA;&#x9;and isnull(Target.NroAutorizacao,0) = isnull(Source.NroAutorizacao,0)&#xA;&#x9;and isnull(Target.IDERP, 0) = isnull(Source.IDERP, 0)&#xA;&#x9;and Target.[Estabelecimento] = Source.[Estabelecimento]&#xA;&#x9;and Target.[Adquirente] = Source.[Adquirente]&#xA;&#x9;and Target.[Bandeira] = Source.[Bandeira]&#xA;&#x9;and isnull(Target.Tipo,0) = isnull(Source.Tipo,0) &#xA;&#x9;and isnull(Target.[NroTerminal],0) = isnull(Source.[NroTerminal],0) &#xA;&#x9;and isnull(Target.[DtCaptura], 0) = isnull(Source.[DtCaptura],0) &#xA;&#x9;and isnull(Target.[DtVenda],0) = isnull(Source.[DtVenda],0)&#xA;&#x9;and isnull(Target.[DtCancelamento],0) = isnull(Source.[DtCancelamento],0)&#xA;&#x9;and isnull(Target.[NroCartao],0) = isnull(Source.[NroCartao], 0)&#xA;&#x9;and isnull(Target.[NSU],0) = isnull(Source.[NSU],0)&#xA;&#x9;and isnull(Target.[TID], 0) = isnull(Source.[TID], 0)&#xA;&#x9;and Target.[Parc] = Source.[Parc]&#xA;&#x9;and Target.[VlrBruto] = Source.[VlrBruto]&#xA;&#x9;and Target.[VlrComissao] = Source.[VlrComissao]&#xA;&#x9;and Target.[MotivoCancelamento] = Source.[MotivoCancelamento]&#xA;&#x9;and Target.[VlrBruto] = Source.[VlrBruto])&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA; INSERT ([TipoCancelamento]&#xA;           ,[NroAutorizacao]&#xA;           ,[IDERP]&#xA;           ,[Estabelecimento]&#xA;           ,[CategoriaEstabelecimento]&#xA;           ,[Adquirente]&#xA;           ,[Bandeira]&#xA;           ,[Tipo]&#xA;           ,[Produto]&#xA;           ,[Localizador]&#xA;           ,[NroTerminal]&#xA;           ,[LoteRO]&#xA;           ,[LoteUnico]&#xA;           ,[NrSequencia]&#xA;           ,[NrReferenciaPedido]&#xA;           ,[DtCaptura]&#xA;           ,[DtVenda]&#xA;           ,[DtCancelamento]&#xA;           ,[NroCartao]&#xA;           ,[NSU]&#xA;           ,[TID]&#xA;           ,[Parc]&#xA;           ,[VlrBruto]&#xA;           ,[VlrComissao]&#xA;           ,[VlrLiquido]&#xA;           ,[VlrBrutoCancelamento]&#xA;           ,[VlrLiquidoCancelamento]&#xA;           ,[MotivoCancelamento]&#xA;           ,[Conciliacao]&#xA;           ,[IDERPCanal]&#xA;           ,[NomeCanal]&#xA;           ,[NomeTarefa]&#xA;           ,[SituacaoTarefa])&#xA; VALUES (Source.[TipoCancelamento]&#xA;&#x9;&#x9;  ,Source.[NroAutorizacao]&#xA;&#x9;&#x9;  ,Source.[IDERP]&#xA;&#x9;&#x9;  ,Source.[Estabelecimento]&#xA;&#x9;&#x9;  ,Source.[CategoriaEstabelecimento]&#xA;&#x9;&#x9;  ,Source.[Adquirente]&#xA;&#x9;&#x9;  ,Source.[Bandeira]&#xA;&#x9;&#x9;  ,Source.[Tipo]&#xA;&#x9;&#x9;  ,Source.[Produto]&#xA;&#x9;&#x9;  ,Source.[Localizador]&#xA;&#x9;&#x9;  ,Source.[NroTerminal]&#xA;&#x9;&#x9;  ,Source.[LoteRO]&#xA;&#x9;&#x9;  ,Source.[LoteUnico]&#xA;&#x9;&#x9;  ,Source.[NrSequencia]&#xA;&#x9;&#x9;  ,Source.[NrReferenciaPedido]&#xA;&#x9;&#x9;  ,Source.[DtCaptura]&#xA;&#x9;&#x9;  ,Source.[DtVenda]&#xA;&#x9;&#x9;  ,Source.[DtCancelamento]&#xA;&#x9;&#x9;  ,Source.[NroCartao]&#xA;&#x9;&#x9;  ,Source.[NSU]&#xA;&#x9;&#x9;  ,Source.[TID]&#xA;&#x9;&#x9;  ,Source.[Parc]&#xA;&#x9;&#x9;  ,Source.[VlrBruto]&#xA;&#x9;&#x9;  ,Source.[VlrComissao]&#xA;&#x9;&#x9;  ,Source.[VlrLiquido]&#xA;&#x9;&#x9;  ,Source.[VlrBrutoCancelamento]&#xA;&#x9;&#x9;  ,Source.[VlrLiquidoCancelamento]&#xA;&#x9;&#x9;  ,Source.[MotivoCancelamento]&#xA;&#x9;&#x9;  ,Source.[Conciliacao]&#xA;&#x9;&#x9;  ,Source.[IDERPCanal]&#xA;&#x9;&#x9;  ,Source.[NomeCanal]&#xA;&#x9;&#x9;  ,Source.[NomeTarefa]&#xA;&#x9;&#x9;  ,Source.[SituacaoTarefa]);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimDomicilioBancario"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B2DC1FFC-1141-4558-A8B1-0DBF252B5A3E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimDomicilioBancario"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="8">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="insert into dimDomicilioBancario&#xA;SELECT distinct a.Banco, isnull(a.Agencia, 0), isnull(a.Conta, 0)&#xA;FROM [dbo].[dsFluxoCaixa] a&#xA;left join dimDomicilioBancario b on isnull(a.Conta,0) = b.Conta&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Agencia,0) = b.Agencia&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Banco = b.Banco&#xA;where b.Conta is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimLoteVenda"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D2501048-7EE8-481A-A982-0E24692BAF03}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimLoteVenda"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="9">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="insert into dimLoteVenda&#xA;&#x9;([Lote]&#xA;&#x9;,[LoteUnico]&#xA;&#x9;,[FiliacaoEstabelecimento]&#xA;&#x9;,[Adquirente]&#xA;&#x9;,[Estabelecimento])&#xA;SELECT distinct isnull(a.Lote, '-1') as Lote, &#xA;&#x9;&#x9;&#x9;&#x9;isnull(a.LoteUnico, '-1') as LoteUnico, &#xA;&#x9;&#x9;&#x9;&#x9;isnull(a.FiliacaoEstabelec, '-1') as FiliacaoEstabelec, a.Adquirente, a.Estabelecimento&#xA;FROM [dbo].[dsFluxoCaixa] a&#xA;left join dimLoteVenda b on isnull(a.LoteUnico, '-1') = b.LoteUnico&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Lote, '-1') = b.Lote&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.FiliacaoEstabelec, '-1') = b.[FiliacaoEstabelecimento]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Adquirente = b.Adquirente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Estabelecimento = b.Estabelecimento&#xA;where b.IdLoteVenda is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimMeioCaptura"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D66267E4-EA8F-4C0C-A700-CAAD7F71D1D2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimMeioCaptura"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="5">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="INSERT INTO dimMeioCaptura&#xA;           (MeioCaptura)&#xA;select distinct a.MeioCaptura &#xA;from dsTransacaoAdquirente a&#xA;left join dimMeioCaptura b on a.MeioCaptura = b.MeioCaptura&#xA;where b.MeioCaptura is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimPagamento"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{DE601374-F4E3-4DEF-AF0A-2953911874C8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimPagamento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="7">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="INSERT INTO [dbo].[dimPagamento]&#xA;           ([gateway]&#xA;           ,[numero_venda_ir]&#xA;           ,[venda_bilheteria_id]&#xA;           ,[codigo_gateway]&#xA;           ,[nsu_host]&#xA;           ,[nsu_sitef]&#xA;           ,[paypal_id]&#xA;           ,[numero_autorizacao_adquirente]&#xA;           ,[data_compra]&#xA;           ,[valor_taxa_conveniencia_total]&#xA;           ,[valor_taxa_entrega_total]&#xA;           ,[valor_juros_total]&#xA;           ,[valor_compra_original_total]&#xA;           ,[numero_cartao]&#xA;           ,[nome_portador_cartao]&#xA;           ,[id_usuario]&#xA;           ,[plataforma_utilizada]&#xA;           ,[nota_fiscal_estabelecimento_sitef]&#xA;           ,[data_venda_completa])&#xA;SELECT distinct  [gateway]&#xA;      ,[numero_venda_ir]&#xA;      ,[venda_bilheteria_id]&#xA;      ,[codigo_gateway]&#xA;      ,[nsu_host]&#xA;      ,[nsu_sitef]&#xA;      ,[paypal_id]&#xA;      ,[numero_autorizacao_adquirente]&#xA;      ,[data_compra]&#xA;      ,[valor_taxa_conveniencia_total]&#xA;      ,[valor_taxa_entrega_total]&#xA;      ,[valor_juros_total]&#xA;      ,[valor_compra_original_total]&#xA;      ,[numero_cartao]&#xA;      ,[nome_portador_cartao]&#xA;      ,[id_usuario]&#xA;      ,[plataforma_utilizada]&#xA;      ,[nota_fiscal_estabelecimento_sitef]&#xA;      ,[data_venda_completa]&#xA;  FROM [dbo].[dsVendaAtivaLegado]&#xA;  where numero_venda_ir not in (select numero_venda_ir from dimPagamento)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimProduto"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A36FEDF2-06E6-4DF9-973A-78A1F6E7B31E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimProduto"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="INSERT INTO [dbo].[dimProduto]&#xA;           ([Tipo]&#xA;           ,[Produto]&#xA;           ,[Bandeira])&#xA;select distinct a.Tipo, &#xA;&#x9;&#x9;&#x9;&#x9;a.Produto, &#xA;&#x9;&#x9;&#x9;&#x9;a.Bandeira &#xA;from dsTransacaoAdquirente a&#xA;left join dimProduto b on a.Tipo = b.Tipo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Produto = b.Produto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Bandeira = b.Bandeira&#xA;where b.Tipo is null&#xA;&#xA;&#xA;INSERT INTO [dbo].[dimProduto]&#xA;           ([Tipo]&#xA;           ,[Produto]&#xA;           ,[Bandeira])&#xA;select distinct a.TipoVenda, &#xA;&#x9;&#x9;&#x9;&#x9;a.Produto, &#xA;&#x9;&#x9;&#x9;&#x9;a.Bandeira &#xA;from dsFluxoCaixa a&#xA;left join dimProduto b on a.TipoVenda = b.Tipo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Produto = b.Produto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Bandeira = b.Bandeira&#xA;where b.Tipo is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimTempo"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:Disabled="True"
      DTS:DTSID="{C4EFB75D-43A4-472E-B511-AF7978B182B2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimTempo"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="4">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="declare @dataInicial date, @dataFinal date, @data date, &#xA;    @ano smallint, @mes smallint, @dia smallint, &#xA;    @diaSemana smallint, @diaUtil char(1), @fimSemana char(1), &#xA;    @feriado char(1), @preFeriado char(1), @posFeriado char(1), &#xA;    @nomeFeriado varchar(30), @nomeDiaSemana varchar(15), &#xA;    @nomeDiaSemanaAbrev char(3), @nomeMes varchar(15), &#xA;    @nomeMesAbrev char(3), @bimestre smallint, @trimestre smallint, &#xA;    @nrSemanaMes smallint, @estacaoAno varchar(15), &#xA;    @dataPorExtenso varchar(50)&#xA;&#xA;--informe aqui o período para o qual deseja criar os dados&#xA;set @dataInicial = '01/01/2017'&#xA;set @dataFinal = '12/31/2017'&#xA;&#xA;while @dataInicial &lt;= @dataFinal&#xA;begin&#xA;&#x9; set @data = @dataInicial&#xA;&#x9; set @ano = year(@data)&#xA;&#x9; set @mes = month(@data)&#xA;&#x9; set @dia = day(@data)&#xA;&#x9; set @diaSemana = datepart(weekday,@data)&#xA;&#xA;&#x9; if @diaSemana in (1,7) &#xA;&#x9; set @fimSemana = 'S'&#xA;&#x9; else set @fimSemana = 'N'&#xA;&#xA;&#x9; /* feriados locais/regionais e aqueles que não possuem data fixa &#xA;&#x9; (carnaval, páscoa e corpus cristis) tb devem ser adicionados aqui */&#xA;&#xA;&#x9; if (@mes = 1 and @dia in (1,2)) or (@mes = 12 and @dia = 31) --confraternização universal&#xA;&#x9; set @nomeFeriado = 'confraternização universal'&#xA;&#x9; else &#xA;&#x9; if (@mes = 4 and @dia in (20,21,22)) --tiradentes&#xA;&#x9; set @nomeFeriado = 'tiradentes'&#xA;&#x9; else &#xA;&#x9; if (@mes = 5 and @dia in (1,2))or (@mes = 4 and @dia = 30) --dia do trabalho&#xA;&#x9; set @nomeFeriado = 'dia do trabalho'&#xA;&#x9; else &#xA;&#x9; if (@mes = 9 and @dia in (6,7,8)) --independência do brasil&#xA;&#x9; set @nomeFeriado = 'independência do brasil'&#xA;&#x9; else &#xA;&#x9; if (@mes = 10 and @dia in (11,12,13)) --nossa senhora aparecida&#xA;&#x9; set @nomeFeriado = 'nossa senhora aparecida'&#xA;&#x9; else&#xA;&#x9; if (@mes = 11 and @dia in (1,2,3)) --finados&#xA;&#x9; set @nomeFeriado = 'finados'&#xA;&#x9; else&#xA;&#x9; if (@mes = 11 and @dia in (14,15,16)) --proclamação da república&#xA;&#x9; set @nomeFeriado = 'proclamação da república'&#xA;&#x9; else&#xA;&#x9; if (@mes = 12 and @dia in (24,25,26)) --natal&#xA;&#x9; set @nomeFeriado = 'natal'&#xA;&#x9; else set @nomeFeriado = null&#xA;&#xA;&#x9; if (@mes = 12 and @dia = 31) or --confraternização universal&#xA;&#x9; (@mes = 4 and @dia = 20) or --tiradentes&#xA;&#x9; (@mes = 4 and @dia = 30) or --dia do trabalho&#xA;&#x9; (@mes = 9 and @dia = 6) or --independência do brasil&#xA;&#x9; (@mes = 10 and @dia = 11) or --nossa senhora aparecida&#xA;&#x9; (@mes = 11 and @dia = 1) or --finados&#xA;&#x9; (@mes = 11 and @dia = 14) or --proclamação da república&#xA;&#x9; (@mes = 12 and @dia = 24) --natal&#xA;&#x9; set @preFeriado = 'S'&#xA;&#x9; else set @preFeriado = 'N'&#xA;&#xA;&#x9; if (@mes = 1 and @dia = 1) or --confraternização universal&#xA;&#x9; (@mes = 4 and @dia = 21) or --tiradentes&#xA;&#x9; (@mes = 5 and @dia = 1) or --dia do trabalho&#xA;&#x9; (@mes = 9 and @dia = 7) or --independência do brasil&#xA;&#x9; (@mes = 10 and @dia = 12) or --nossa senhora aparecida&#xA;&#x9; (@mes = 11 and @dia = 2) or --finados&#xA;&#x9; (@mes = 11 and @dia = 15) or --proclamação da república&#xA;&#x9; (@mes = 12 and @dia = 25) --natal&#xA;&#x9; set @feriado = 'S'&#xA;&#x9; else set @feriado = 'N'&#xA;&#xA;&#x9; if (@mes = 1 and @dia = 2) or --confraternização universal&#xA;&#x9; (@mes = 4 and @dia = 22) or --tiradentes&#xA;&#x9; (@mes = 5 and @dia = 2) or --dia do trabalho&#xA;&#x9; (@mes = 9 and @dia = 8) or --independência do brasil&#xA;&#x9; (@mes = 10 and @dia = 13) or --nossa senhora aparecida&#xA;&#x9; (@mes = 11 and @dia = 3) or --finados&#xA;&#x9; (@mes = 11 and @dia = 16) or --proclamação da república&#xA;&#x9; (@mes = 12 and @dia = 26) --natal&#xA;&#x9; set @posFeriado = 'S'&#xA;&#x9; else set @posFeriado = 'N'&#xA;&#xA;&#x9; set @nomeMes = case when @mes = 1 then 'janeiro'&#xA;&#x9; when @mes = 2 then 'fevereiro'&#xA;&#x9; when @mes = 3 then 'março'&#xA;&#x9; when @mes = 4 then 'abril'&#xA;&#x9; when @mes = 5 then 'maio'&#xA;&#x9; when @mes = 6 then 'junho'&#xA;&#x9; when @mes = 7 then 'julho'&#xA;&#x9; when @mes = 8 then 'agosto'&#xA;&#x9; when @mes = 9 then 'setembro'&#xA;&#x9; when @mes = 10 then 'outubro'&#xA;&#x9; when @mes = 11 then 'novembro'&#xA;&#x9; when @mes = 12 then 'dezembro' end&#xA;&#xA;&#x9; set @nomeMesAbrev = case when @mes = 1 then 'jan'&#xA;&#x9; when @mes = 2 then 'fev'&#xA;&#x9; when @mes = 3 then 'mar'&#xA;&#x9; when @mes = 4 then 'abr'&#xA;&#x9; when @mes = 5 then 'mai'&#xA;&#x9; when @mes = 6 then 'jun'&#xA;&#x9; when @mes = 7 then 'jul'&#xA;&#x9; when @mes = 8 then 'ago'&#xA;&#x9; when @mes = 9 then 'set'&#xA;&#x9; when @mes = 10 then 'out'&#xA;&#x9; when @mes = 11 then 'nov'&#xA;&#x9; when @mes = 12 then 'dez' end&#xA;&#xA;&#x9; if @fimSemana = 'S' or @feriado = 'S'&#xA;&#x9; set @diaUtil = 'N'&#xA;&#x9; else set @diaUtil = 'S'&#xA;&#xA;&#x9; set @nomeDiaSemana = case when @diaSemana = 1 then 'domingo'&#xA;&#x9; when @diaSemana = 2 then 'segunda-feira'&#xA;&#x9; when @diaSemana = 3 then 'terça-feira'&#xA;&#x9; when @diaSemana = 4 then 'quarta-feira'&#xA;&#x9; when @diaSemana = 5 then 'quinta-feira'&#xA;&#x9; when @diaSemana = 6 then 'sexta-feira'&#xA;&#x9; else 'sábado' end&#xA;&#xA;&#x9; set @nomeDiaSemanaAbrev = case when @diaSemana = 1 then 'dom'&#xA;&#x9; when @diaSemana = 2 then 'seg'&#xA;&#x9; when @diaSemana = 3 then 'ter'&#xA;&#x9; when @diaSemana = 4 then 'qua'&#xA;&#x9; when @diaSemana = 5 then 'qui'&#xA;&#x9; when @diaSemana = 6 then 'sex'&#xA;&#x9; else 'sáb' end&#xA;&#xA;&#x9; set @bimestre = case when @mes in (1,2) then 1&#xA;&#x9; when @mes in (3,4) then 2&#xA;&#x9; when @mes in (5,6) then 3&#xA;&#x9; when @mes in (7,8) then 4&#xA;&#x9; when @mes in (9,10) then 5&#xA;&#x9; else 6 end&#xA;&#xA;&#x9; set @trimestre = case when @mes in (1,2,3) then 1&#xA;&#x9; when @mes in (4,5,6) then 2&#xA;&#x9; when @mes in (7,8,9) then 3&#xA;&#x9; else 4 end&#xA;&#xA;&#x9; set @nrSemanaMes = case when @dia &lt; 8 then 1&#xA;&#x9; when @dia &lt; 15 then 2&#xA;&#x9; when @dia &lt; 22 then 3&#xA;&#x9; when @dia &lt; 29 then 4&#xA;&#x9; else 5 end&#xA;&#xA;&#x9; if @data between cast('09/23/'+convert(char(4),@ano) as date) and cast('12/20/'+convert(char(4),@ano) as date)&#xA;&#x9; set @estacaoAno = 'primavera'&#xA;&#x9; else if @data between cast('03/21/'+convert(char(4),@ano) as date) and cast('06/20/'+convert(char(4),@ano) as date)&#xA;&#x9; set @estacaoAno = 'outono'&#xA;&#x9; else if @data between cast('06/21/'+convert(char(4),@ano) as date) and cast('09/22/'+convert(char(4),@ano) as date)&#xA;&#x9; set @estacaoAno = 'inverno'&#xA;&#x9; else -- @data between 21/12 e 20/03&#xA;&#x9; set @estacaoAno = 'verão'&#xA;&#xA;&#x9;INSERT INTO dbo.DimTempo&#xA;&#x9; SELECT @data&#xA;&#x9; ,@ano&#xA;&#x9; ,@mes&#xA;&#x9; ,@dia&#xA;&#x9; ,@diaSemana&#xA;&#x9; ,datepart(dayofyear,@data) --DIA_ANO&#xA;&#x9; ,case when (@ano % 4) = 0 then 'S' else 'N' end -- ANO_BISSEXTO&#xA;&#x9; ,@diaUtil&#xA;&#x9; ,@fimSemana&#xA;&#x9; ,@feriado&#xA;&#x9; ,@preFeriado&#xA;&#x9; ,@posFeriado&#xA;&#x9; ,@nomeFeriado&#xA;&#x9; ,@nomeDiaSemana&#xA;&#x9; ,@nomeDiaSemanaAbrev&#xA;&#x9; ,@nomeMes&#xA;&#x9; ,@nomeMesAbrev&#xA;&#x9; ,case when @dia &lt; 16 then 1 else 2 end -- QUINZENA&#xA;&#x9; ,@bimestre&#xA;&#x9; ,@trimestre&#xA;&#x9; ,case when @mes &lt; 7 then 1 else 2 end -- SEMESTRE&#xA;&#x9; ,@nrSemanaMes&#xA;&#x9; ,datepart(wk,@data)--NR_SEMANA_ANO, smallint&#xA;&#x9; ,@estacaoAno&#xA;&#x9; ,lower(@nomeDiaSemana + ', ' + cast(@dia as varchar) + ' de ' + @nomeMes + ' de ' + cast(@ano as varchar))&#xA;&#x9; ,null--EVENTO, varchar(50))&#xA;&#xA;&#x9; set @dataInicial = dateadd(day,1,@dataInicial) &#xA;end&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimTransacaoAdquirente"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D4543CBC-BABD-4E44-ADD0-56F5563E4E9B}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimTransacaoAdquirente"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="MERGE INTO dimTransacaoAdquirente AS Target&#xA;USING (&#xA;&#x9;SELECT [NroAutorizacao]&#xA;&#x9;&#x9;&#x9;  ,[IDERP]&#xA;&#x9;&#x9;&#x9;  ,[IDEQUALS]&#xA;&#x9;&#x9;&#x9;  ,[Bandeira]&#xA;&#x9;&#x9;&#x9;  ,[Adquirente]&#xA;&#x9;&#x9;&#x9;  ,[LoteRO]&#xA;&#x9;&#x9;&#x9;  ,[Data]&#xA;&#x9;&#x9;&#x9;  ,[DtCaptura]&#xA;&#x9;&#x9;&#x9;  ,[Hora]&#xA;&#x9;&#x9;&#x9;  ,[NroCartao]&#xA;&#x9;&#x9;&#x9;  ,[OrigemCartao]&#xA;&#x9;&#x9;&#x9;  ,[NSU]&#xA;&#x9;&#x9;&#x9;  ,[TID]&#xA;&#x9;&#x9;&#x9;  ,[Parc]&#xA;&#x9;&#x9;&#x9;  ,[LoteUnico]&#xA;&#x9;&#x9;&#x9;  ,[NroReferencia]&#xA;&#x9;&#x9;&#x9;  ,replace(replace([Taxa], '%', ''), ',', '.') as Taxa&#xA;&#x9;&#x9;&#x9;  ,replace(replace([TxContrato], '%', ''), ',', '.') as TaxaContrato&#xA;&#x9;&#x9;&#x9;  ,[Situacao]&#xA;&#x9;&#x9;&#x9;  ,[DtSituacao]&#xA;&#x9;&#x9;&#x9;  ,[Conciliada]&#xA;&#x9;&#x9;&#x9;  ,[MJustificativa]&#xA;&#x9;&#x9;&#x9;  ,[NomeTarefa]&#xA;&#x9;&#x9;&#x9;  ,[SituacaoTarefa]&#xA;&#x9;&#x9;&#x9;  ,[ConciliacaoParam]&#xA;&#x9;&#x9;&#x9;  ,[DtRegistro]&#xA;&#x9;&#x9;FROM [dbo].[dsTransacaoAdquirente] &#xA;) AS Source (NroAutorizacao&#xA;&#x9;&#x9;&#x9;  ,[IDERP]&#xA;&#x9;&#x9;&#x9;  ,[IDEQUALS]&#xA;&#x9;&#x9;&#x9;  ,[Bandeira]&#xA;&#x9;&#x9;&#x9;  ,[Adquirente]&#xA;&#x9;&#x9;&#x9;  ,[LoteRO]&#xA;&#x9;&#x9;&#x9;  ,[Data]&#xA;&#x9;&#x9;&#x9;  ,[DtCaptura]&#xA;&#x9;&#x9;&#x9;  ,[Hora]&#xA;&#x9;&#x9;&#x9;  ,[NroCartao]&#xA;&#x9;&#x9;&#x9;  ,[OrigemCartao]&#xA;&#x9;&#x9;&#x9;  ,[NSU]&#xA;&#x9;&#x9;&#x9;  ,[TID]&#xA;&#x9;&#x9;&#x9;  ,[Parc]&#xA;&#x9;&#x9;&#x9;  ,[LoteUnico]&#xA;&#x9;&#x9;&#x9;  ,[NroReferencia]&#xA;&#x9;&#x9;&#x9;  ,Taxa&#xA;&#x9;&#x9;&#x9;  ,TaxaContrato&#xA;&#x9;&#x9;&#x9;  ,[Situacao]&#xA;&#x9;&#x9;&#x9;  ,[DtSituacao]&#xA;&#x9;&#x9;&#x9;  ,[Conciliada]&#xA;&#x9;&#x9;&#x9;  ,[MJustificativa]&#xA;&#x9;&#x9;&#x9;  ,[NomeTarefa]&#xA;&#x9;&#x9;&#x9;  ,[SituacaoTarefa]&#xA;&#x9;&#x9;&#x9;  ,[ConciliacaoParam]&#xA;&#x9;&#x9;&#x9;  ,[DtRegistro]&#xA;&#x9;&#x9;&#x9;)&#xA;ON (Target.IDEQUALS  = Source.[IDEQUALS])&#xA;&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA; INSERT (NroAutorizacao&#xA;&#x9;&#x9;&#x9;  ,[IDERP]&#xA;&#x9;&#x9;&#x9;  ,[IDEQUALS]&#xA;&#x9;&#x9;&#x9;  ,[Bandeira]&#xA;&#x9;&#x9;&#x9;  ,[Adquirente]&#xA;&#x9;&#x9;&#x9;  ,[LoteRO]&#xA;&#x9;&#x9;&#x9;  ,[Data]&#xA;&#x9;&#x9;&#x9;  ,[DtCaptura]&#xA;&#x9;&#x9;&#x9;  ,[Hora]&#xA;&#x9;&#x9;&#x9;  ,[NroCartao]&#xA;&#x9;&#x9;&#x9;  ,[OrigemCartao]&#xA;&#x9;&#x9;&#x9;  ,[NSU]&#xA;&#x9;&#x9;&#x9;  ,[TID]&#xA;&#x9;&#x9;&#x9;  ,[Parc]&#xA;&#x9;&#x9;&#x9;  ,[LoteUnico]&#xA;&#x9;&#x9;&#x9;  ,[NroReferencia]&#xA;&#x9;&#x9;&#x9;  ,Taxa&#xA;&#x9;&#x9;&#x9;  ,TaxaContrato&#xA;&#x9;&#x9;&#x9;  ,[Situacao]&#xA;&#x9;&#x9;&#x9;  ,[DtSituacao]&#xA;&#x9;&#x9;&#x9;  ,[Conciliada]&#xA;&#x9;&#x9;&#x9;  ,[MJustificativa]&#xA;&#x9;&#x9;&#x9;  ,[NomeTarefa]&#xA;&#x9;&#x9;&#x9;  ,[SituacaoTarefa]&#xA;&#x9;&#x9;&#x9;  ,[ConciliacaoParam]&#xA;&#x9;&#x9;&#x9;  ,[DtRegistro])&#xA; VALUES (Source.NroAutorizacao &#xA;&#x9;&#x9;&#x9;  ,Source.[IDERP]&#xA;&#x9;&#x9;&#x9;  ,Source.[IDEQUALS]&#xA;&#x9;&#x9;&#x9;  ,Source.[Bandeira]&#xA;&#x9;&#x9;&#x9;  ,Source.[Adquirente]&#xA;&#x9;&#x9;&#x9;  ,Source.[LoteRO]&#xA;&#x9;&#x9;&#x9;  ,Source.[Data]&#xA;&#x9;&#x9;&#x9;  ,Source.[DtCaptura]&#xA;&#x9;&#x9;&#x9;  ,Source.[Hora]&#xA;&#x9;&#x9;&#x9;  ,Source.[NroCartao]&#xA;&#x9;&#x9;&#x9;  ,Source.[OrigemCartao]&#xA;&#x9;&#x9;&#x9;  ,Source.[NSU]&#xA;&#x9;&#x9;&#x9;  ,Source.[TID]&#xA;&#x9;&#x9;&#x9;  ,Source.[Parc]&#xA;&#x9;&#x9;&#x9;  ,Source.[LoteUnico]&#xA;&#x9;&#x9;&#x9;  ,Source.[NroReferencia]&#xA;&#x9;&#x9;&#x9;  ,Source.Taxa&#xA;&#x9;&#x9;&#x9;  ,Source.TaxaContrato&#xA;&#x9;&#x9;&#x9;  ,Source.[Situacao]&#xA;&#x9;&#x9;&#x9;  ,Source.[DtSituacao]&#xA;&#x9;&#x9;&#x9;  ,Source.[Conciliada]&#xA;&#x9;&#x9;&#x9;  ,Source.[MJustificativa]&#xA;&#x9;&#x9;&#x9;  ,Source.[NomeTarefa]&#xA;&#x9;&#x9;&#x9;  ,Source.[SituacaoTarefa]&#xA;&#x9;&#x9;&#x9;  ,Source.[ConciliacaoParam]&#xA;&#x9;&#x9;&#x9;  ,Source.[DtRegistro])&#xA;WHEN MATCHED THEN UPDATE &#xA; SET Target.Conciliada = Source.Conciliada,&#xA;  Target.DtSituacao = Source.DtSituacao,&#xA;  Target.IDERP = Source.IDERP, &#xA;  Target.Bandeira = Source.Bandeira,&#xA;  Target.Adquirente = Source.Adquirente,&#xA;  Target.MJustificativa  = Source.MJustificativa, &#xA;  Target.NomeTarefa = Source.NomeTarefa,&#xA;  Target.NroReferencia = Source.NroReferencia,&#xA;  Target.Situacao = Source.Situacao,&#xA;  Target.SituacaoTarefa = Source.SituacaoTarefa,&#xA;  Target.LoteUnico = Source.LoteUnico;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimTransacaoIR"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D7A9FEB2-1313-4594-B2B8-7CAD736914A0}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimTransacaoIR"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="&#xA;-- Insere as distintas AK (para não replicar transacoes)&#xA;&#xA;insert into dimTransacaoIR &#xA;(NroAutorizacao, NSU, DtTransacao)&#xA;select distinct a.NroAutorizacao, a.NSU, a.DtTransacao &#xA;from dsTransacaoIR a&#xA;left join dimTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = b.DtTransacao&#xA;where a.NroAutorizacao is not null &#xA;and a.NSU is not null and a.DtTransacao is not null&#xA;and b.IdTransacaoIR is null&#xA;union &#xA;select distinct isnull(a.[NroAutorizacao], b.[NroAutorizacao]) as NroAutorizacao &#xA;&#x9;&#x9;,isnull(a.[NSU], b.[NSU]) as NSU&#xA;&#x9;&#x9;,a.[DtTransacao]&#xA;from dsTransacaoIR a&#xA;inner join dimTransacaoAdquirente b on a.TID = b.TID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NroAutorizacao = b.NroAutorizacao&#xA;left join dimTransacaoIR c on isnull(a.[NroAutorizacao], b.[NroAutorizacao]) = c.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NSU], b.[NSU]) = c.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = c.DtTransacao&#xA;where a.NroAutorizacao is null or a.NSU is null&#xA;and c.IdTransacaoIR is null&#xA;union&#xA;-- Casos excepcionais da REDE&#xA;select distinct isnull(a.[NroAutorizacao], b.[NroAutorizacao]) as NroAutorizacao &#xA;&#x9;&#x9;,isnull(a.[NSU], b.[NSU]) as NSU&#xA;&#x9;&#x9;,a.[DtTransacao]&#xA;from dsTransacaoIR a&#xA;inner join dimTransacaoAdquirente b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Bandeira = b.Bandeira&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.VlrPagamento = b.ValorBruto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Adquirente = b.Adquirente&#xA;left join dimTransacaoIR c on isnull(a.[NroAutorizacao], b.[NroAutorizacao]) = c.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NSU], b.[NSU]) = c.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = c.DtTransacao&#xA;where a.NroAutorizacao is null or a.NSU is null&#xA;and c.IdTransacaoIR is null&#xA;and a.Adquirente = 'REDE'&#xA;&#xA;-- Realiza update nos campos criados (popula os campos que alteram com o tempo). &#xA;&#xA;CREATE TABLE #tmpTransacaoIR(&#xA;&#x9;[NroAutorizacao] [varchar](50) NULL,&#xA;&#x9;[IDERP] [varchar](50) NULL,&#xA;&#x9;[Cliente] [varchar](100) NULL,&#xA;&#x9;[Estabelecimento] [varchar](50) NULL,&#xA;&#x9;[CategoriaEstabelecimento] [varchar](50) NULL,&#xA;&#x9;[Adquirente] [varchar](50) NULL,&#xA;&#x9;--[idPagamento] [varchar](50) NULL,&#xA;&#x9;[EstabERP] [varchar](50) NULL,&#xA;&#x9;[CanalVenda] [varchar](50) NULL,&#xA;&#x9;[NroCanal] [varchar](50) NULL,&#xA;&#x9;[FormaPagto] [varchar](50) NULL,&#xA;&#x9;[DtTransacao] [datetime] NULL,&#xA;&#x9;[DtVenda] [datetime] NULL,&#xA;&#x9;[LoteInterno] [varchar](50) NULL,&#xA;&#x9;[LoteAdq] [varchar](50) NULL,&#xA;&#x9;[IDContabilPagamento] [varchar](50) NULL,&#xA;&#x9;[IDContabilVenda] [varchar](50) NULL,&#xA;&#x9;[Bandeira] [varchar](50) NULL,&#xA;&#x9;[NumCartaoCredito] [varchar](50) NULL,&#xA;&#x9;[NSU] [varchar](50) NULL,&#xA;&#x9;[TID] [varchar](50) NULL,&#xA;&#x9;[Localizador] [varchar](50) NULL,&#xA;&#x9;--[MeioDeCaptura] [varchar](50) NULL,&#xA;&#x9;[Parc] [int] NULL,&#xA;&#x9;--[QtdPagamentos] [int] NULL,&#xA;&#x9;[VlrPagamento] [decimal](9, 2) NULL,&#xA;&#x9;[VlrLiquido] [decimal](9, 2) NULL,&#xA;&#x9;[VlrParcela] [decimal](9, 2) NULL,&#xA;&#x9;[VlrAdic1] [decimal](9, 2) NULL,&#xA;&#x9;[VlrAdic2] [decimal](9, 2) NULL,&#xA;&#x9;[VlrDiferenca] [decimal](9, 2) NULL,&#xA;&#x9;[Resultado] [varchar](50) NULL,&#xA;&#x9;[Conciliacao] [varchar](50) NULL,&#xA;&#x9;[NomeTarefa] [varchar](50) NULL,&#xA;&#x9;[SituacaoTarefa] [varchar](50) NULL,&#xA;&#x9;[SituacaoParam] [varchar](10) NULL,&#xA;&#x9;--[SituacaoConcParam] [varchar](10) NULL,&#xA;&#x9;--[FormaPagParam] [varchar](10) NULL,&#xA;&#x9;[DtRegistro] [datetime] NULL&#xA;)&#xA;&#xA;&#xA;insert into #tmpTransacaoIR&#xA;select distinct a.[NroAutorizacao]&#xA;      ,a.[IDERP]&#xA;      ,a.[Cliente]&#xA;      ,a.[Estabelecimento]&#xA;      ,a.[CategoriaEstabelecimento]&#xA;      ,a.[Adquirente]&#xA;      ,a.[EstabERP]&#xA;      ,a.[CanalVenda]&#xA;      ,a.[NroCanal]&#xA;      ,a.[FormaPagto]&#xA;      ,a.[DtTransacao]&#xA;      ,a.[DtVenda]&#xA;      ,a.[LoteInterno]&#xA;      ,a.[LoteAdq]&#xA;      ,a.[IDContabilPagamento]&#xA;      ,a.[IDContabilVenda]&#xA;      ,a.[Bandeira]&#xA;      ,a.[NumCartaoCredito]&#xA;      ,a.[NSU]&#xA;      ,a.[TID]&#xA;      ,a.[Localizador]&#xA;      ,a.[Parc]&#xA;      ,a.[VlrPagamento]&#xA;      ,a.[VlrLiquido]&#xA;      ,a.[VlrParcela]&#xA;      ,a.[VlrAdic1]&#xA;      ,a.[VlrAdic2]&#xA;      ,a.[VlrDiferenca]&#xA;      ,a.[Resultado]&#xA;      ,a.[Conciliacao]&#xA;      ,a.[NomeTarefa]&#xA;      ,a.[SituacaoTarefa]&#xA;      ,a.[SituacaoParam]&#xA;      ,a.[DtRegistro]&#xA;from dsTransacaoIR a&#xA;inner join dimTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = b.DtTransacao&#xA;where a.NroAutorizacao is not null &#xA;and a.NSU is not null and a.DtTransacao is not null&#xA;union &#xA;select distinct &#xA;&#x9;&#x9;isnull(a.[NroAutorizacao], b.[NroAutorizacao]) as NroAutorizacao &#xA;      ,a.[IDERP]&#xA;      ,a.[Cliente]&#xA;      ,a.[Estabelecimento]&#xA;      ,a.[CategoriaEstabelecimento]&#xA;      ,a.[Adquirente]&#xA;      ,a.[EstabERP]&#xA;      ,a.[CanalVenda]&#xA;      ,a.[NroCanal]&#xA;      ,a.[FormaPagto]&#xA;      ,a.[DtTransacao]&#xA;      ,a.[DtVenda]&#xA;      ,a.[LoteInterno]&#xA;      ,a.[LoteAdq]&#xA;      ,a.[IDContabilPagamento]&#xA;      ,a.[IDContabilVenda]&#xA;      ,a.[Bandeira]&#xA;      ,a.[NumCartaoCredito]&#xA;      ,isnull(a.[NSU], b.[NSU]) as NSU&#xA;      ,a.[TID]&#xA;      ,a.[Localizador]&#xA;      ,a.[Parc]&#xA;      ,a.[VlrPagamento]&#xA;      ,a.[VlrLiquido]&#xA;      ,a.[VlrParcela]&#xA;      ,a.[VlrAdic1]&#xA;      ,a.[VlrAdic2]&#xA;      ,a.[VlrDiferenca]&#xA;      ,a.[Resultado]&#xA;      ,a.[Conciliacao]&#xA;      ,a.[NomeTarefa]&#xA;      ,a.[SituacaoTarefa]&#xA;      ,a.[SituacaoParam]&#xA;&#x9;  ,a.[DtRegistro]&#xA;from dsTransacaoIR a&#xA;inner join dimTransacaoAdquirente b on a.TID = b.TID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NroAutorizacao = b.NroAutorizacao&#xA;inner join dimTransacaoIR c on isnull(a.[NroAutorizacao], b.[NroAutorizacao]) = c.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NSU], b.[NSU]) = c.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = c.DtTransacao&#xA;where a.NroAutorizacao is null or a.NSU is null&#xA;and b.TID is not null&#xA;union&#xA;select distinct &#xA;&#x9;&#x9;isnull(a.[NroAutorizacao], b.[NroAutorizacao]) as NroAutorizacao &#xA;      ,a.[IDERP]&#xA;      ,a.[Cliente]&#xA;      ,a.[Estabelecimento]&#xA;      ,a.[CategoriaEstabelecimento]&#xA;      ,a.[Adquirente]&#xA;      ,a.[EstabERP]&#xA;      ,a.[CanalVenda]&#xA;      ,a.[NroCanal]&#xA;      ,a.[FormaPagto]&#xA;      ,a.[DtTransacao]&#xA;      ,a.[DtVenda]&#xA;      ,a.[LoteInterno]&#xA;      ,a.[LoteAdq]&#xA;      ,a.[IDContabilPagamento]&#xA;      ,a.[IDContabilVenda]&#xA;      ,a.[Bandeira]&#xA;      ,a.[NumCartaoCredito]&#xA;      ,isnull(a.[NSU], b.[NSU]) as NSU&#xA;      ,a.[TID]&#xA;      ,a.[Localizador]&#xA;      ,a.[Parc]&#xA;      ,a.[VlrPagamento]&#xA;      ,a.[VlrLiquido]&#xA;      ,a.[VlrParcela]&#xA;      ,a.[VlrAdic1]&#xA;      ,a.[VlrAdic2]&#xA;      ,a.[VlrDiferenca]&#xA;      ,a.[Resultado]&#xA;      ,a.[Conciliacao]&#xA;      ,a.[NomeTarefa]&#xA;      ,a.[SituacaoTarefa]&#xA;      ,a.[SituacaoParam]&#xA;&#x9;  ,a.[DtRegistro]&#xA;from dsTransacaoIR a&#xA;inner join dimTransacaoAdquirente b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Bandeira = b.Bandeira&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.VlrPagamento = b.ValorBruto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Adquirente = b.Adquirente&#xA;inner join dimTransacaoIR c on isnull(a.[NroAutorizacao], b.[NroAutorizacao]) = c.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NSU], b.[NSU]) = c.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = c.DtTransacao&#xA;where a.NroAutorizacao is null or a.NSU is null&#xA;and a.Adquirente = 'REDE'&#xA;&#xA;-- Update nas transações com status Conciliacao = null ou Em Aberto&#xA;UPDATE [dbo].[dimTransacaoIR]&#xA;   SET [IDERP] = b.IDERP&#xA;      ,[Cliente] = b.Cliente&#xA;      ,[Estabelecimento] = b.Estabelecimento&#xA;      ,[CategoriaEstabelecimento] = b.CategoriaEstabelecimento&#xA;      ,[Adquirente] = b.Adquirente&#xA;      ,[EstabERP] = b.EstabERP&#xA;      ,[CanalVenda] = b.CanalVenda&#xA;      ,[NroCanal] = b.NroCanal&#xA;      ,[FormaPagto] = b.FormaPagto&#xA;      ,[DtVenda] = b.DtVenda&#xA;      ,[LoteInterno] = b.LoteInterno&#xA;      ,[LoteAdq] = b.LoteAdq&#xA;      ,[IDContabilPagamento] = b.IDContabilPagamento&#xA;      ,[IDContabilVenda] = b.IDContabilVenda&#xA;      ,[Bandeira] = b.Bandeira&#xA;      ,[NumCartaoCredito] = b.NumCartaoCredito&#xA;      ,[TID] = b.TID&#xA;      ,[Localizador] = b.Localizador&#xA;      ,[Parc] = b.Parc&#xA;      ,[Resultado] = b.Resultado&#xA;      ,[Conciliacao] = b.Conciliacao&#xA;      ,[NomeTarefa] = b.NomeTarefa&#xA;      ,[SituacaoTarefa] = b.SituacaoTarefa&#xA;      ,[SituacaoParam] = b.SituacaoParam&#xA;&#x9;  ,[ValorPagamento] = b.VlrPagamento&#xA;&#x9;  ,[ValorLiquido] = b.VlrLiquido&#xA;&#x9;  ,VlrAdic1 = b.VlrAdic1&#xA;&#x9;  ,VlrAdic2 = b.VlrAdic2&#xA;&#x9;  ,VlrDiferenca = b.VlrDiferenca&#xA;from [dimTransacaoIR] a&#xA;inner join #tmpTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = b.DtTransacao&#xA;where b.Conciliacao is null or b.Conciliacao = 'Em Aberto'&#xA;&#xA;-- Update nas transações com status Conciliacao = Conciliada&#xA;UPDATE [dbo].[dimTransacaoIR]&#xA;   SET [IDERP] = b.IDERP&#xA;      ,[Cliente] = b.Cliente&#xA;      ,[Estabelecimento] = b.Estabelecimento&#xA;      ,[CategoriaEstabelecimento] = b.CategoriaEstabelecimento&#xA;      ,[Adquirente] = b.Adquirente&#xA;      ,[EstabERP] = b.EstabERP&#xA;      ,[CanalVenda] = b.CanalVenda&#xA;      ,[NroCanal] = b.NroCanal&#xA;      ,[FormaPagto] = b.FormaPagto&#xA;      ,[DtVenda] = b.DtVenda&#xA;      ,[LoteInterno] = b.LoteInterno&#xA;      ,[LoteAdq] = b.LoteAdq&#xA;      ,[IDContabilPagamento] = b.IDContabilPagamento&#xA;      ,[IDContabilVenda] = b.IDContabilVenda&#xA;      ,[Bandeira] = b.Bandeira&#xA;      ,[NumCartaoCredito] = b.NumCartaoCredito&#xA;      ,[TID] = b.TID&#xA;      ,[Localizador] = b.Localizador&#xA;      ,[Parc] = b.Parc&#xA;      ,[Resultado] = b.Resultado&#xA;      ,[Conciliacao] = b.Conciliacao&#xA;      ,[NomeTarefa] = b.NomeTarefa&#xA;      ,[SituacaoTarefa] = b.SituacaoTarefa&#xA;      ,[SituacaoParam] = b.SituacaoParam&#xA;&#x9;  ,[ValorPagamento] = b.VlrPagamento&#xA;&#x9;  ,[ValorLiquido] = b.VlrLiquido&#xA;&#x9;  ,VlrAdic1 = b.VlrAdic1&#xA;&#x9;  ,VlrAdic2 = b.VlrAdic2&#xA;&#x9;  ,VlrDiferenca = b.VlrDiferenca&#xA;from [dimTransacaoIR] a&#xA;inner join #tmpTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtTransacao = b.DtTransacao&#xA;where b.Conciliacao = 'Conciliada'&#xA;&#xA;drop table #tmpTransacaoIR" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimTransacaoIRNaoConciliada"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{77269FF0-70B8-4CA4-A26F-A05CD2B144F8}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimTransacaoIRNaoConciliada"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="insert into dimTransacaoIRIlegivel&#xA;select distinct a.* &#xA;from dsTransacaoIR a&#xA;left join dimTransacaoIRIlegivel b on a.IDERP = b.IDERP&#xA;where a.NroAutorizacao = '0' and a.NSU is null and a.TID is null&#xA;and b.IDERP is null" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimVenda (Bileto)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{DD82AB93-82C8-453D-B682-91890461E358}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimVenda (Bileto)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-- Carrega vendas do bileto&#xA;INSERT INTO [dbo].[dimVenda]&#xA;           ([is_bileto]&#xA;           ,[gateway]&#xA;           ,[numero_venda_ir]&#xA;           ,[venda_bilheteria_id]&#xA;           ,[codigo_gateway]&#xA;           ,[nsu_host]&#xA;           ,[nsu_sitef]&#xA;           ,[paypal_id]&#xA;           ,[numero_autorizacao_adquirente]&#xA;           ,[data_compra]&#xA;           ,[valor_taxa_conveniencia_total]&#xA;           ,[valor_taxa_entrega_total]&#xA;           ,[valor_juros_total]&#xA;           ,[valor_compra_original_total]&#xA;           ,[numero_cartao]&#xA;           ,[nome_portador_cartao]&#xA;           ,[status_compra]&#xA;           ,[nome_comprador]&#xA;           ,[telefone_comprador]&#xA;           ,[id_usuario]&#xA;           ,[ip_comprador]&#xA;           ,[plataforma_utilizada]&#xA;           ,[nota_fiscal_estabelecimento_sitef]&#xA;           ,[data_venda_completa]&#xA;           ,[nomes_precos_ingressos_unicos])&#xA;SELECT distinct a.[is_bileto]&#xA;      ,a.[gateway]&#xA;      ,a.[numero_venda_ir]&#xA;      ,a.[venda_bilheteria_id]&#xA;      ,a.[codigo_gateway]&#xA;      ,a.[nsu_host]&#xA;      ,a.[nsu_sitef]&#xA;      ,a.[paypal_id]&#xA;      ,a.[numero_autorizacao_adquirente]&#xA;      ,a.[data_compra]&#xA;      ,avg(a.[valor_taxa_conveniencia_total]) as ValorTaxaConvenienciaTotal -- Validar se deve ser somando ou média com o Brabo. &#xA;      ,a.[valor_taxa_entrega_total]&#xA;      ,avg(a.[valor_juros_total]) as ValorJurosTotal -- Validar se deve ser somado ou média com o Brabo. &#xA;      ,a.[valor_compra_original_total]&#xA;      ,a.[numero_cartao]&#xA;      ,a.[nome_portador_cartao]&#xA;      ,a.[status_compra]&#xA;      ,a.[nome_comprador]&#xA;      ,a.[telefone_comprador]&#xA;      ,a.[id_usuario]&#xA;      ,a.[ip_comprador]&#xA;      ,a.[plataforma_utilizada]&#xA;      ,a.[nota_fiscal_estabelecimento_sitef]&#xA;      ,a.[data_venda_completa]&#xA;      ,a.[nomes_precos_ingressos_unicos]&#xA;  FROM [dbo].[dsVendaAtivaBileto] a&#xA;  left join dimVenda b on a.numero_venda_ir = b.numero_venda_ir&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.is_bileto = b.is_bileto &#xA;  where b.IdVenda is null &#xA;  group by a.[is_bileto]&#xA;      ,a.[gateway]&#xA;      ,a.[numero_venda_ir]&#xA;      ,a.[venda_bilheteria_id]&#xA;      ,a.[codigo_gateway]&#xA;      ,a.[nsu_host]&#xA;      ,a.[nsu_sitef]&#xA;      ,a.[paypal_id]&#xA;      ,a.[numero_autorizacao_adquirente]&#xA;      ,a.[data_compra]&#xA;      ,a.[valor_taxa_entrega_total]&#xA;      ,a.[valor_compra_original_total]&#xA;      ,a.[numero_cartao]&#xA;      ,a.[nome_portador_cartao]&#xA;      ,a.[status_compra]&#xA;      ,a.[nome_comprador]&#xA;      ,a.[telefone_comprador]&#xA;      ,a.[id_usuario]&#xA;      ,a.[ip_comprador]&#xA;      ,a.[plataforma_utilizada]&#xA;      ,a.[nota_fiscal_estabelecimento_sitef]&#xA;      ,a.[data_venda_completa]&#xA;      ,a.[nomes_precos_ingressos_unicos]&#xA;&#xA;&#xA;--=================================================&#xA;-- Incluindo vendas do arquivo de cancelamentos&#xA;--=================================================&#xA;-- Carrega as vendas que ainda não foram carregadas&#xA;INSERT INTO [dbo].[dimVenda]&#xA;           ([is_bileto]&#xA;           ,[gateway]&#xA;           ,[numero_venda_ir]&#xA;           ,[venda_bilheteria_id]&#xA;           ,[codigo_gateway]&#xA;           ,[nsu_host]&#xA;           ,[nsu_sitef]&#xA;           ,[paypal_id]&#xA;           ,[numero_autorizacao_adquirente]&#xA;           ,[data_compra]&#xA;           ,[valor_juros_total]&#xA;           ,[valor_compra_original_total]&#xA;           ,[status_compra]&#xA;           ,[nome_comprador]&#xA;           ,[telefone_comprador]&#xA;           ,[id_usuario]&#xA;           ,[ip_comprador]&#xA;           ,[nota_fiscal_estabelecimento_sitef])&#xA;SELECT distinct a.[is_bileto]&#xA;      ,a.[gateway]&#xA;      ,a.[numero_venda_ir]&#xA;      ,a.[venda_bilheteria_id]&#xA;      ,a.[codigo_gateway]&#xA;      ,a.[nsu_host]&#xA;      ,a.[nsu_sitef]&#xA;      ,a.[paypal_id]&#xA;      ,a.[numero_autorizacao_adquirente]&#xA;      ,a.[data_compra]&#xA;      ,avg(a.[valor_juros_total]) as ValorJurosTotal&#xA;      ,a.[valor_compra_original_total]&#xA;      ,a.[status_compra]&#xA;      ,a.[nome_comprador]&#xA;      ,a.[telefone_comprador]&#xA;      ,a.[id_usuario]&#xA;      ,a.[ip_comprador]&#xA;      ,a.[nota_fiscal_estabelecimento_sitef]&#xA;  FROM [dbo].dsVendaCanceladaBileto a&#xA;  left join dimVenda b on a.numero_venda_ir = b.numero_venda_ir&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.is_bileto = b.is_bileto &#xA;  where b.IdVenda is null&#xA;  group by a.[is_bileto]&#xA;      ,a.[gateway]&#xA;      ,a.[numero_venda_ir]&#xA;      ,a.[venda_bilheteria_id]&#xA;      ,a.[codigo_gateway]&#xA;      ,a.[nsu_host]&#xA;      ,a.[nsu_sitef]&#xA;      ,a.[paypal_id]&#xA;      ,a.[numero_autorizacao_adquirente]&#xA;      ,a.[data_compra]&#xA;      ,a.[valor_compra_original_total]&#xA;      ,a.[status_compra]&#xA;      ,a.[nome_comprador]&#xA;      ,a.[telefone_comprador]&#xA;      ,a.[id_usuario]&#xA;      ,a.[ip_comprador]&#xA;      ,a.[nota_fiscal_estabelecimento_sitef]&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load dimVenda (Legado)"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{75970E1F-0D2B-48AA-909A-47A5663E2317}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load dimVenda (Legado)"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="6">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="&#xA;INSERT INTO [dbo].[dimVenda]&#xA;           ([is_bileto]&#xA;           ,[gateway]&#xA;           ,[numero_venda_ir]&#xA;           ,[venda_bilheteria_id]&#xA;           ,[codigo_gateway]&#xA;           ,[nsu_host]&#xA;           ,[nsu_sitef]&#xA;           ,[paypal_id]&#xA;           ,[numero_autorizacao_adquirente]&#xA;           ,[data_compra]&#xA;           --,[bandeira]&#xA;           --,[tipo_cartao]&#xA;           --,[nome_forma_pagamento]&#xA;           ,[valor_taxa_conveniencia_total]&#xA;           ,[valor_taxa_entrega_total]&#xA;           ,[valor_juros_total]&#xA;           ,[valor_compra_original_total]&#xA;           --,[numero_parcelas]&#xA;           ,[numero_cartao]&#xA;           ,[nome_portador_cartao]&#xA;           ,[status_compra]&#xA;           ,[nome_comprador]&#xA;           ,[telefone_comprador]&#xA;           ,[id_usuario]&#xA;           ,[ip_comprador]&#xA;           ,[plataforma_utilizada]&#xA;&#x9;&#x9;   ,[id_produtor_evento]&#xA;&#x9;&#x9;   ,[nome_produtor_evento]&#xA;           ,[nota_fiscal_estabelecimento_sitef]&#xA;           ,[data_venda_completa]&#xA;           ,[nomes_precos_ingressos_unicos])&#xA;SELECT distinct [is_bileto]&#xA;      ,[gateway]&#xA;      ,[numero_venda_ir]&#xA;      ,[venda_bilheteria_id]&#xA;      ,[codigo_gateway]&#xA;      ,[nsu_host]&#xA;      ,[nsu_sitef]&#xA;      ,[paypal_id]&#xA;      ,[numero_autorizacao_adquirente]&#xA;      ,[data_compra]&#xA;      --,[quantidade_ingressos]&#xA;      --,[bandeira]&#xA;      --,[tipo_cartao]&#xA;      --,[nome_forma_pagamento]&#xA;      ,[valor_taxa_conveniencia_total]&#xA;      ,[valor_taxa_entrega_total]&#xA;      ,[valor_juros_total]&#xA;      ,[valor_compra_original_total]&#xA;      --,[numero_parcelas]&#xA;      ,[numero_cartao]&#xA;      ,[nome_portador_cartao]&#xA;      ,[status_compra]&#xA;      ,[nome_comprador]&#xA;      ,[telefone_comprador]&#xA;      ,[id_usuario]&#xA;      ,[ip_comprador]&#xA;      ,[plataforma_utilizada]&#xA;      ,[id_produtor_evento]&#xA;      ,[nome_produtor_evento]&#xA;      --,[nome_evento]&#xA;      --,[id_evento]&#xA;      --,[data_evento]&#xA;      --,[nome_local]&#xA;      --,[tipo_evento]&#xA;      ,[nota_fiscal_estabelecimento_sitef]&#xA;      ,[data_venda_completa]&#xA;      ,[nomes_precos_ingressos_unicos]&#xA;  FROM [dbo].[dsVendaAtivaLegado] &#xA;  where numero_venda_ir not in (select distinct numero_venda_ir from dimVenda)&#xA;&#xA;&#xA;--=================================================&#xA;-- Incluindo vendas do arquivo de cancelamentos&#xA;--=================================================&#xA;&#xA;-- Hardcode para retirar duplicidade&#xA;delete from dsVendaCanceladaLegado where gateway = 'Sitef' and codigo_gateway is null&#xA;&#xA;-- Carrega as vendas que ainda não foram carregadas&#xA;INSERT INTO [dbo].[dimVenda]&#xA;           ([is_bileto]&#xA;           ,[gateway]&#xA;           ,[numero_venda_ir]&#xA;           ,[venda_bilheteria_id]&#xA;           ,[codigo_gateway]&#xA;           ,[nsu_host]&#xA;           ,[nsu_sitef]&#xA;           ,[paypal_id]&#xA;           ,[numero_autorizacao_adquirente]&#xA;           ,[data_compra]&#xA;           ,[valor_juros_total]&#xA;           ,[valor_compra_original_total]&#xA;           ,[status_compra]&#xA;           ,[nome_comprador]&#xA;           ,[telefone_comprador]&#xA;           ,[id_usuario]&#xA;           ,[ip_comprador]&#xA;           ,[nota_fiscal_estabelecimento_sitef])&#xA;SELECT distinct [is_bileto]&#xA;      ,[gateway]&#xA;      ,[numero_venda_ir]&#xA;      ,[venda_bilheteria_id]&#xA;      ,[codigo_gateway]&#xA;      ,[nsu_host]&#xA;      ,[nsu_sitef]&#xA;      ,[paypal_id]&#xA;      ,[numero_autorizacao_adquirente]&#xA;      ,[data_compra]&#xA;      ,[valor_juros_total]&#xA;      ,[valor_compra_original_total]&#xA;      ,[status_compra]&#xA;      ,[nome_comprador]&#xA;      ,[telefone_comprador]&#xA;      ,[id_usuario]&#xA;      ,[ip_comprador]&#xA;      ,[nota_fiscal_estabelecimento_sitef]&#xA;  FROM [dbo].dsVendaCanceladaLegado &#xA;  where numero_venda_ir not in (select distinct numero_venda_ir from dimVenda)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load fatCancelamento"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B551E7FF-107E-4478-9626-33241D1D546A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load fatCancelamento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="MERGE INTO fatCancelamento AS Target&#xA;USING (&#xA;&#x9;&#x9;select  distinct &#xA;&#x9;&#x9;&#x9;b.IdCancelamento, &#xA;&#x9;&#x9;&#x9;isnull(c.IdTransacaoAdquirente, -1) as IdTransacaoAdquirente,&#xA;&#x9;&#x9;&#x9;isnull(d.IdTransacaoIR, -1) as IdTransacaoIR,&#xA;&#x9;&#x9;&#x9;isnull(d.IdSituacao, 2) as IdSituacao,&#xA;&#x9;&#x9;&#x9;isnull(d.IdAdquirente, -1) as IdAdquirente,&#xA;&#x9;&#x9;&#x9;isnull(d.IdProduto, -1) as IdProduto,&#xA;&#x9;&#x9;&#x9;isnull(isnull(d.IdDataCaptura, e.IdTempo), -1) as IdDataCaptura,&#xA;&#x9;&#x9;&#x9;isnull(isnull(d.IdDataVenda, f.IdTempo), -1) as IdDataVenda,&#xA;&#x9;&#x9;&#x9;isnull(g.IdTempo, -1) as IdDataCancelamento, &#xA;&#x9;&#x9;&#x9;a.Parc as Parcelas, &#xA;&#x9;&#x9;&#x9;a.VlrBruto as ValorBruto, &#xA;&#x9;&#x9;&#x9;isnull(a.VlrComissao, 0) as ValorComissao, &#xA;&#x9;&#x9;&#x9;isnull(a.VlrLiquido, 0) as ValorLiquido, &#xA;&#x9;&#x9;&#x9;isnull(a.VlrBrutoCancelamento, 0) as ValorBrutoCancelado, &#xA;&#x9;&#x9;&#x9;isnull(a.VlrLiquidoCancelamento, 0) as ValorLiquidoCancelado&#xA;&#x9;from dsCancelamento a&#xA;&#x9;inner join dimCancelamento b on a.TipoCancelamento  = b.TipoCancelamento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.NroAutorizacao,0) = isnull(b.NroAutorizacao,0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.IDERP, 0) = isnull(b.IDERP, 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[Estabelecimento] = b.[Estabelecimento]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[Adquirente] = b.[Adquirente]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[Bandeira] = b.[Bandeira]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Tipo,0) = isnull(b.Tipo,0) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NroTerminal],0) = isnull(b.[NroTerminal],0) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[DtCaptura], 0) = isnull(b.[DtCaptura],0) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[DtVenda],0) = isnull(b.[DtVenda],0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[DtCancelamento],0) = isnull(b.[DtCancelamento],0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NroCartao],0) = isnull(b.[NroCartao], 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[NSU],0) = isnull(b.[NSU],0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[TID], 0) = isnull(b.[TID], 0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[Parc] = b.[Parc]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[VlrBruto] = b.[VlrBruto]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[VlrComissao] = b.[VlrComissao]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[MotivoCancelamento] = b.[MotivoCancelamento]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.[VlrBruto] = b.[VlrBruto]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.VlrBrutoCancelamento = b.VlrBrutoCancelamento &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.VlrLiquidoCancelamento = b.VlrLiquidoCancelamento&#xA;&#x9;left join dimTransacaoAdquirente c on a.NroAutorizacao = c.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = c.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.DtCaptura = c.DtCaptura&#xA;&#x9;left join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;&#x9;left join dimTempo e on convert(date, a.DtCaptura) = convert(date, e.DATA)&#xA;&#x9;left join dimTempo f on convert(date, a.DtVenda) = convert(date, f.DATA)&#xA;&#x9;left join dimTempo g on convert(date, a.DtCancelamento) = convert(date, g.DATA)&#xA;&#x9;left join fatCancelamento h on b.IdCancelamento = h.IdCancelamento&#xA;&#xA;) AS Source (IdCancelamento, &#xA;&#x9;&#x9;&#x9;IdTransacaoAdquirente,&#xA;&#x9;&#x9;&#x9;IdTransacaoIR,&#xA;&#x9;&#x9;&#x9;IdSituacao,&#xA;&#x9;&#x9;&#x9;IdAdquirente,&#xA;&#x9;&#x9;&#x9;IdProduto,&#xA;&#x9;&#x9;&#x9;IdDataCaptura,&#xA;&#x9;&#x9;&#x9;IdDataVenda,&#xA;&#x9;&#x9;&#x9;IdDataCancelamento, &#xA;&#x9;&#x9;&#x9;Parcelas, &#xA;&#x9;&#x9;&#x9;ValorBruto, &#xA;&#x9;&#x9;&#x9;ValorComissao, &#xA;&#x9;&#x9;&#x9;ValorLiquido, &#xA;&#x9;&#x9;&#x9;ValorBrutoCancelado, &#xA;&#x9;&#x9;&#x9;ValorLiquidoCancelado&#xA;&#x9;&#x9;&#x9;)&#xA;ON (Target.IdCancelamento = Source.IdCancelamento)&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA; INSERT (IdCancelamento, &#xA;&#x9;&#x9;IdTransacaoAdquirente,&#xA;&#x9;&#x9;IdTransacaoIR,&#xA;&#x9;&#x9;IdSituacao,&#xA;&#x9;&#x9;IdAdquirente,&#xA;&#x9;&#x9;IdProduto,&#xA;&#x9;&#x9;IdDataCaptura,&#xA;&#x9;&#x9;IdDataVenda,&#xA;&#x9;&#x9;IdDataCancelamento, &#xA;&#x9;&#x9;Parcelas, &#xA;&#x9;&#x9;ValorBruto, &#xA;&#x9;&#x9;ValorComissao, &#xA;&#x9;&#x9;ValorLiquido, &#xA;&#x9;&#x9;ValorBrutoCancelado, &#xA;&#x9;&#x9;ValorLiquidoCancelado)&#xA; VALUES (Source.IdCancelamento, &#xA;&#x9;&#x9;&#x9;Source.IdTransacaoAdquirente,&#xA;&#x9;&#x9;&#x9;Source.IdTransacaoIR,&#xA;&#x9;&#x9;&#x9;Source.IdSituacao,&#xA;&#x9;&#x9;&#x9;Source.IdAdquirente,&#xA;&#x9;&#x9;&#x9;Source.IdProduto,&#xA;&#x9;&#x9;&#x9;Source.IdDataCaptura,&#xA;&#x9;&#x9;&#x9;Source.IdDataVenda,&#xA;&#x9;&#x9;&#x9;Source.IdDataCancelamento, &#xA;&#x9;&#x9;&#x9;Source.Parcelas, &#xA;&#x9;&#x9;&#x9;Source.ValorBruto, &#xA;&#x9;&#x9;&#x9;Source.ValorComissao, &#xA;&#x9;&#x9;&#x9;Source.ValorLiquido, &#xA;&#x9;&#x9;&#x9;Source.ValorBrutoCancelado, &#xA;&#x9;&#x9;&#x9;Source.ValorLiquidoCancelado)&#xA;WHEN MATCHED THEN UPDATE &#xA; SET Target.IdTransacaoAdquirente = Source.IdTransacaoAdquirente,&#xA;  Target.IdTransacaoIR = Source.IdTransacaoIR,&#xA;  Target.IdSituacao = Source.IdSituacao, &#xA;  Target.IdAdquirente = Source.IdAdquirente,&#xA;  Target.IdProduto = Source.IdProduto,&#xA;  Target.IdDataCaptura = Source.IdDataCaptura,&#xA;  Target.ValorBrutoCancelado = Source.ValorBrutoCancelado,&#xA;  Target.ValorLiquidoCancelado = Source.ValorLiquidoCancelado;&#xA;&#xA;-- Atualiza as exceções via (TID, NSU, Autorizacao e Valor)&#xA;update fatCancelamento &#xA;&#x9;set IdTransacaoAdquirente = c.IdTransacaoAdquirente,&#xA;&#x9;&#x9;IdTransacaoIR = d.IdTransacaoIR,&#xA;&#x9;&#x9;IdSituacao = d.IdSituacao, &#xA;&#x9;&#x9;IdAdquirente = d.IdAdquirente,&#xA;&#x9;&#x9;IdProduto = d.IdProduto,&#xA;&#x9;&#x9;IdDataCaptura = d.IdDataCaptura&#xA;from fatCancelamento a &#xA;inner join dimCancelamento b on a.IdCancelamento = b.IdCancelamento&#xA;inner join dimTransacaoAdquirente c on b.TID = c.TID&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and b.NSU = c.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(b.NroAutorizacao,0) = isnull(c.NroAutorizacao,0)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and b.VlrBruto = a.ValorBruto&#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;where a.IdTransacaoAdquirente = -1&#xA;&#xA;---- Convert para negativo os Estornos de Chargeback&#xA;--update fatCancelamento&#xA;--set ValorBruto = VlrBruto * -1, &#xA;--ValorComissao = VlrComissao * -1, &#xA;--ValorLiquido = VlrLiquido * -1, &#xA;--ValorBrutoCancelado = VlrBrutoCancelamento * -1,&#xA;--ValorLiquidoCancelado = VlrLiquidoCancelamento * -1&#xA;--from fatCancelamento a&#xA;--inner join dimCancelamento b on a.IdCancelamento = b.IdCancelamento&#xA;--where (b.TipoCancelamento = 'Estorno de Chargeback' or b.TipoCancelamento = 'Estorno de Cancelamento') and b.VlrBruto &gt;= 0&#xA;&#xA;---- Convert para negativo os Cancelamento de retenção para resolução de disputa&#xA;--update fatCancelamento&#xA;--set ValorBruto = VlrBruto * -1, &#xA;--ValorComissao = VlrComissao * -1, &#xA;--ValorLiquido = VlrLiquido * -1, &#xA;--ValorBrutoCancelado = VlrBrutoCancelamento * -1,&#xA;--ValorLiquidoCancelado = VlrLiquidoCancelamento * -1&#xA;--from fatCancelamento a&#xA;--inner join dimCancelamento b on a.IdCancelamento = b.IdCancelamento&#xA;--where b.TipoCancelamento = 'Outros Lançamentos' &#xA;--and b.MotivoCancelamento = 'Cancelamento de retenção para resolução de disputa' and b.VlrBruto &gt;=&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load fatConciliacaoLoteVenda"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6D9B70CE-5180-488D-B3CA-FE54325E882E}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load fatConciliacaoLoteVenda"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="truncate table fatConciliacaoLoteVenda&#xA;&#xA;&#xA;insert into fatConciliacaoLoteVenda&#xA;(IdLoteVenda, IdDataVenda, ValorVenda, ValorCanceladoVenda, ValorVendaValido)&#xA;select a.IdLoteVenda as IdLoteVenda, &#xA;&#x9;&#x9;a.IdDataVenda as IdDataVenda, &#xA;&#x9;&#x9;sum(isnull(a.ValorVenda,0))as ValorVenda, &#xA;&#x9;&#x9;sum(isnull(a.ValorCanceladoVenda, 0)) as ValorCanceladoVenda, &#xA;&#x9;&#x9;sum(iif(b.IsCanceladaMesmoDia = 0, isnull(a.ValorVenda,0), 0)) as VendaValido&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;where a.IdLoteVenda not in (select IdLoteVenda from fatConciliacaoLoteVenda)&#xA;group by a.IdLoteVenda, a.IdDataVenda&#xA;order by IdLoteVenda, IdDataVenda&#xA;&#xA;--=====================================================&#xA;-- Setando os valores de fluxo de caixa do lote. &#xA;select&#x9;a.IdLoteVenda as IdLoteVenda, &#xA;&#x9;&#x9;a.IdDataLoteVenda as IdDataVenda,&#xA;&#x9;&#x9;isnull(a.IdDataVencimento, -1) as IdDataPagamento, &#xA;&#x9;&#x9;a.IdDomicilioBancario, &#xA;&#x9;&#x9;sum(a.ValorBruto) as ValorBruto, &#xA;&#x9;&#x9;sum(a.ValorCancelamentoLiquido) as ValorCanceladoLiquido, &#xA;&#x9;&#x9;sum(a.ValorCBKLiquido) as ValorCBKLiquido, &#xA;&#x9;&#x9;sum(a.ValorComissao) as ValorComissao, &#xA;&#x9;&#x9;sum(a.ValorAntecipacaoCedida) as VlrAntecipacaoCedida, &#xA;&#x9;&#x9;sum(a.ValorAntecipacao) as VlrAntecipacao, &#xA;&#x9;&#x9;sum(a.TaxaAntecipacao) as TaxaAntecipacao, &#xA;&#x9;&#x9;sum(a.ValorOutrosAjustes) as ValorOutrosAjustes, &#xA;&#x9;&#x9;sum(a.ValorPrevisto)as ValorPrevisto, &#xA;&#x9;&#x9;sum(a.ValorPago) as ValorPago&#xA;into #tmp_LoteVendaScoreCard&#xA;from fatFluxoCaixa a &#xA;group by a.IdLoteVenda, a.IdDataLoteVenda, a.IdDataVencimento, a.IdDomicilioBancario&#xA;&#xA;-- Atualiza os valores dos lotes. &#xA;update fatConciliacaoLoteVenda&#xA;set IdDataPagamento = b.IdDataPagamento, &#xA;IdDomicilioBancario = b.IdDomicilioBancario, &#xA;ValorBrutoAdquirente = b.ValorBruto, &#xA;ValorCanceladoLiquido = b.ValorCanceladoLiquido, &#xA;ValorCBKLiquido = b.ValorCBKLiquido, &#xA;ComissaoAdquirente = b.ValorComissao, &#xA;ValorAntecipacaoCedida = b.VlrAntecipacaoCedida, &#xA;ValorAntecipacao = b.VlrAntecipacao, &#xA;TaxaAntecipacao = b.TaxaAntecipacao, &#xA;ValorOutrosAjustes = b.ValorOutrosAjustes, &#xA;ValorPrevistoConciliador = b.ValorPrevisto, &#xA;ValorPago = b.ValorPago&#xA;from fatConciliacaoLoteVenda a &#xA;inner join #tmp_LoteVendaScoreCard b on a.IdLoteVenda = b.IdLoteVenda&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.IdDataVenda = b.IdDataVenda&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.IdDataPagamento = b.IdDataPagamento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.IdDomicilioBancario = b.IdDomicilioBancario&#xA;&#xA;-- Setando os valores de fluxo de caixa que só geram movimento bancário. &#xA;insert into fatConciliacaoLoteVenda&#xA;(IdLoteVenda, IdDataVenda, IdDataPagamento, ValorBrutoAdquirente,  &#xA; IdDomicilioBancario, ValorCanceladoLiquido, ValorCBKLiquido, &#xA; ComissaoAdquirente, ValorAntecipacaoCedida, ValorAntecipacao, &#xA; TaxaAntecipacao, ValorOutrosAjustes, ValorPrevistoConciliador, &#xA; ValorPago)&#xA;select a.IdLoteVenda, &#xA;&#x9;a.IdDataVenda, &#xA;&#x9;a.IdDataPagamento, &#xA;&#x9;a.ValorBruto, &#xA;&#x9;a.IdDomicilioBancario, &#xA;&#x9;a.ValorCanceladoLiquido, &#xA;&#x9;a.ValorCBKLiquido, &#xA;&#x9;a.ValorComissao, &#xA;&#x9;a.VlrAntecipacaoCedida,&#xA;&#x9;a.VlrAntecipacao, &#xA;&#x9;a.TaxaAntecipacao, &#xA;&#x9;a.ValorOutrosAjustes, &#xA;&#x9;a.ValorPrevisto, &#xA;&#x9;a.ValorPago&#xA;from #tmp_LoteVendaScoreCard a&#xA;left join fatConciliacaoLoteVenda b on a.IdLoteVenda = b.IdLoteVenda&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.IdDataVenda = b.IdDataVenda&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.IdDataPagamento = b.IdDataPagamento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.IdDomicilioBancario = b.IdDomicilioBancario&#xA;where b.IdLoteVenda is null&#xA;&#xA;drop table #tmp_LoteVendaScoreCard&#xA;&#xA;&#xA;-- Seta na dimLoteVenda os lotes já quitados. &#xA;select&#x9;IdLoteVenda, &#xA;&#x9;&#x9;sum(ValorVenda) as TotalVenda,&#xA;&#x9;&#x9;sum(ValorBrutoAdquirente) as Transacionado,  &#xA;&#x9;&#x9;sum(ValorPrevistoConciliador) as ValorPrevisto,&#xA;&#x9;&#x9;sum(ValorPago) as ValorPago, &#xA;&#x9;&#x9;sum(ValorPago) - sum(ValorPrevistoConciliador) as Saldo&#xA;into #tmpLote&#xA;from fatConciliacaoLoteVenda&#xA;group by IdLoteVenda&#xA;&#xA;update dimLoteVenda&#xA;set Quitado = 'Sim'&#xA;from dimLoteVenda a &#xA;inner join #tmpLote b on a.IdLoteVenda = b.IdLoteVenda &#xA;where Saldo = 0&#xA;&#xA;drop table #tmpLote&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load fatConciliacaoVenda"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{96821D4E-3277-4943-9976-C74C4953AB84}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load fatConciliacaoVenda"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="--===================================================================================&#xA;-- LOAD NA FAT_CONCILIACAOVENDA&#xA;--===================================================================================&#xA;-- insert valores da venda&#xA;insert into fatConciliacaoVenda&#xA;(IdVenda, IdTransacaoAdquirente, IdLoteVenda, IdDataVenda, ValorVenda, ValorTransacionadoAdquirente)&#xA;select distinct b.IdVenda as IdVenda, &#xA;&#x9;&#x9;-1 as IdTransacaoAdquirente, &#xA;&#x9;&#x9;-1 as IdLoteVenda, &#xA;&#x9;&#x9;isnull(d.IdTempo, -1) as IdDataVenda, &#xA;&#x9;&#x9;b.valor_compra_original_total as TotalVenda, &#xA;&#x9;&#x9;0.0 as ValorTransacaoAdquirente&#xA;from dimVenda b&#xA;left join dimTempo d on convert(date, b.data_compra) = d.DATA&#xA;left join fatConciliacaoVenda c on b.IdVenda = c.IdVenda&#xA;where c.IdVenda is null&#xA;&#xA;-- Set transacao via Codigo Gateway&#xA;update fatConciliacaoVenda&#xA;set IdTransacaoAdquirente = c.IdTransacaoAdquirente, &#xA;ValorTransacionadoAdquirente = d.ValorBrutoAdquirente, &#xA;ValorCanceladoAdquirente = d.ValorCancelado&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join dimTransacaoAdquirente c on b.codigo_gateway = c.IDERP&#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;--where isnull(a.IdTransacaoAdquirente, -1) = -1&#xA;&#xA;-- Set transacao via Autorizacao, NSU (Sitef) e Data&#xA;update fatConciliacaoVenda&#xA;set IdTransacaoAdquirente = c.IdTransacaoAdquirente, &#xA;ValorTransacionadoAdquirente = d.ValorBrutoAdquirente, &#xA;ValorCanceladoAdquirente = d.ValorCancelado&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join dimTransacaoAdquirente c on right('0000000000'+b.numero_autorizacao_adquirente, 10) = right('0000000000'+c.NroAutorizacao, 10) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and convert(bigint, isnull(b.nsu_sitef, b.nsu_host)) = convert(bigint, c.NSU)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, convert(date, b.data_compra), c.Data) between -5 and 5  -- Limite de diferença de 5 dias. &#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;where isnull(a.IdTransacaoAdquirente, -1) = -1&#xA;&#xA;-- Set transacao via Autorizacao, NSU (Host) e Data&#xA;update fatConciliacaoVenda&#xA;set IdTransacaoAdquirente = c.IdTransacaoAdquirente, &#xA;ValorTransacionadoAdquirente = d.ValorBrutoAdquirente, &#xA;ValorCanceladoAdquirente = d.ValorCancelado&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join dimTransacaoAdquirente c on right('0000000000'+b.numero_autorizacao_adquirente, 10) = right('0000000000'+c.NroAutorizacao, 10) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and convert(bigint, isnull(b.nsu_host, b.nsu_sitef)) = convert(bigint, c.NSU)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, convert(date, b.data_compra), c.Data) between -5 and 5  -- Limite de diferença de 5 dias. &#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;where isnull(a.IdTransacaoAdquirente, -1) = -1&#xA;&#xA;-- Set transacao via NroReferenciae Data&#xA;update fatConciliacaoVenda&#xA;set IdTransacaoAdquirente = c.IdTransacaoAdquirente, &#xA;ValorTransacionadoAdquirente = d.ValorBrutoAdquirente, &#xA;ValorCanceladoAdquirente = d.ValorCancelado&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join dimTransacaoAdquirente c on b.codigo_gateway = c.NroReferencia&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, convert(date, b.data_compra), c.Data) between -5 and 5  -- Limite de diferença de 5 dias. &#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;where isnull(a.IdTransacaoAdquirente, -1) = -1&#xA;and b.codigo_gateway is not null&#xA;&#xA;&#xA;-- Set transacao via Autorizacao, Nro. Cartão e Data. &#xA;update fatConciliacaoVenda&#xA;set IdTransacaoAdquirente = c.IdTransacaoAdquirente, &#xA;ValorTransacionadoAdquirente = d.ValorBrutoAdquirente, &#xA;ValorCanceladoAdquirente = d.ValorCancelado&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join dimTransacaoAdquirente c on right('0000000000'+b.numero_autorizacao_adquirente, 10) = right('0000000000'+c.NroAutorizacao, 10)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, convert(date, b.data_compra), c.Data) between -5 and 5  -- Limite de diferença de 5 dias. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and REPLACE(b.numero_cartao, '*', '') = REPLACE(c.NroCartao, '*', '')&#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;where isnull(a.IdTransacaoAdquirente, -1) = -1&#xA;&#xA;-- Set transação do Paypal&#xA;update fatConciliacaoVenda&#xA;set IdTransacaoAdquirente = c.IdTransacaoAdquirente, &#xA;ValorTransacionadoAdquirente = d.ValorBrutoAdquirente, &#xA;ValorCanceladoAdquirente = d.ValorCancelado&#xA;from fatConciliacaoVenda a&#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join dimTransacaoAdquirente c on b.paypal_id = c.TID &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and b.gateway = 'PayPal'&#xA;inner join fatTransacaoAdquirente d on c.IdTransacaoAdquirente = d.IdTransacaoAdquirente&#xA;where isnull(a.IdTransacaoAdquirente, -1) = -1&#xA;&#xA;-- Set lote de venda&#xA;update fatConciliacaoVenda&#xA;set IdLoteVenda = b.IdLoteVenda&#xA;from fatConciliacaoVenda a&#xA;inner join fatTransacaoAdquirente b on a.IdTransacaoAdquirente = b.IdTransacaoAdquirente&#xA;where a.IdLoteVenda = -1 &#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load fatFluxoCaixa"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{42C55D29-8630-4B1F-9BC3-B5B5CBA07825}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load fatFluxoCaixa"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="3">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-- separa as linhas distintas.&#xA;SELECT distinct [DataVencimento]&#xA;      ,[Estabelecimento]&#xA;      ,[CategoriaEstabelecimento]&#xA;      ,[DataLoteVenda]&#xA;      ,[MesAno]&#xA;      ,[Adquirente]&#xA;      ,[FiliacaoEstabelec]&#xA;      ,[Bandeira]&#xA;      ,[TipoVenda]&#xA;      ,[Produto]&#xA;      ,[Lote]&#xA;      ,[LoteUnico]&#xA;      ,[Parcela]&#xA;      ,[QtdeParcelas]&#xA;      ,[Banco]&#xA;      ,[Agencia]&#xA;      ,[Conta]&#xA;      ,[ValorBruto]&#xA;      ,[ValorComissao]&#xA;      ,[VendasAntecCedidas]&#xA;      ,[Cancelamentos]&#xA;      ,[Chargeback]&#xA;      ,[OutrosAjustes]&#xA;      ,[ValorAntecipacoes]&#xA;      ,[DescontosAntecCessoes]&#xA;      ,[ValorPrevisto]&#xA;      ,[ValorPago]&#xA;      ,[Saldo]&#xA;      ,[VendasCedidas]&#xA;      ,[CessoesAvulsas]&#xA;      ,[DescontosCessoesAvulsas]&#xA;&#x9;into #tmp&#xA;  FROM [dbo].[dsFluxoCaixa]&#xA;GO&#xA;&#xA;-- Load para a fato&#xA;INSERT INTO [dbo].[fatFluxoCaixa]&#xA;           ([IdLoteVenda]&#xA;           ,[IdDomicilioBancario]&#xA;           ,[IdProduto]&#xA;           ,[LoteUnico]&#xA;           ,[IdDataLoteVenda]&#xA;           ,[IdDataVencimento]&#xA;           ,[Parcela]&#xA;           ,[QtdeParcelas]&#xA;           ,[ValorBruto]&#xA;           ,[ValorComissao]&#xA;           ,[ValorAntecipacaoCedida]&#xA;           ,[ValorCancelamentoLiquido]&#xA;           ,[ValorCBKLiquido]&#xA;           ,[ValorOutrosAjustes]&#xA;           ,[ValorAntecipacao]&#xA;           ,[TaxaAntecipacao]&#xA;           ,[ValorPrevisto]&#xA;           ,[ValorPago]&#xA;           ,[Saldo])&#xA;select distinct b.IdLoteVenda, &#xA;&#x9;&#x9;isnull(c.IdDomicilioBancario, -1) as IdDomicilioBancario, &#xA;&#x9;&#x9;isnull(d.IdProduto, -1) as IdProduto, &#xA;&#x9;&#x9;isnull(a.LoteUnico, '-1') as LoteUnico, &#xA;&#x9;&#x9;isnull(e.IdTempo, -1) as IdDataLoteVenda, &#xA;&#x9;&#x9;isnull(f.IdTempo, -1) as IdDataVencimento, &#xA;&#x9;&#x9;isnull(a.Parcela, 0) as Parcela, &#xA;&#x9;&#x9;isnull(a.QtdeParcelas, 0) as QtdeParcelas, &#xA;&#x9;&#x9;isnull(a.ValorBruto, 0) as ValorBruto, &#xA;&#x9;&#x9;isnull(a.ValorComissao, 0) as ValorComissao, &#xA;&#x9;&#x9;isnull(a.VendasAntecCedidas, 0) as ValorAntecipacaoCedida, &#xA;&#x9;&#x9;isnull(a.Cancelamentos, 0) as ValorCancelamentoLiquido, &#xA;&#x9;&#x9;isnull(a.Chargeback, 0) as ValorCahrgebackLiquido, &#xA;&#x9;&#x9;isnull(a.OutrosAjustes, 0) as ValorOutrosAjustes, &#xA;&#x9;&#x9;isnull(a.ValorAntecipacoes, 0) as ValorAntecipacao, &#xA;&#x9;&#x9;isnull(a.DescontosAntecCessoes, 0) as TaxaAntecipacao, &#xA;&#x9;&#x9;isnull(a.ValorPrevisto, 0) as ValorPrevisto, &#xA;&#x9;&#x9;isnull(a.ValorPago, 0) as ValorPago, &#xA;&#x9;&#x9;isnull(a.Saldo, 0) as Saldo &#xA;from #tmp a&#xA;left join dimLoteVenda b on isnull(a.Lote, '-1') = b.Lote&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.LoteUnico, '-1') = b.LoteUnico&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.FiliacaoEstabelec, '-1') = b.FiliacaoEstabelecimento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Adquirente = b.Adquirente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Estabelecimento = b.Estabelecimento&#xA;left join dimDomicilioBancario c on isnull(a.Banco, 0) = c.Banco&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Agencia, 0) = c.Agencia&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Conta, 0) = c.Conta&#xA;left join dimProduto d on a.TipoVenda = d.Tipo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Produto = d.Produto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Bandeira = d.Bandeira&#xA;left join dimTempo e on a.DataLoteVenda = e.DATA&#xA;left join dimTempo f on a.DataVencimento = f.DATA&#xA;left join fatFluxoCaixa g on isnull(a.LoteUnico, -1) = g.LoteUnico&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Lote, '-1') = b.Lote&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.Parcela, 0) = g.Parcela&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.ValorBruto, 0) = g.ValorBruto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.VendasAntecCedidas, 0) = g.ValorAntecipacaoCedida&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.ValorPago, 0) = g.ValorPago&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.ValorPrevisto, 0) = g.ValorPrevisto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(a.[Cancelamentos], 0) = g.ValorCancelamentoLiquido&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(e.IdTempo, -1) = g.IdDataLoteVenda&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and isnull(f.IdTempo, -1) = g.IdDataVencimento&#xA;where g.IdLoteVenda is null -- Somente registros novos&#xA;&#xA;drop table #tmp" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load fatTransacao"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{647487AA-DB58-44B9-B97D-0BF862930203}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load fatTransacao"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="&#xA;&#xA;&#xA;MERGE INTO [fatTransacaoAdquirente] AS Target&#xA;USING (&#xA;&#x9;&#x9;select distinct b.IdTransacaoAdquirente, &#xA;&#x9;&#x9;&#x9;&#x9;c.IdAdquirente, &#xA;&#x9;&#x9;&#x9;&#x9;d.IdProduto, &#xA;&#x9;&#x9;&#x9;&#x9;e.IdMeioCaptura,&#xA;&#x9;&#x9;&#x9;&#x9;f.IdTempo as IdDataVenda, &#xA;&#x9;&#x9;&#x9;&#x9;g.IdTempo as IdDataSituacao, &#xA;&#x9;&#x9;&#x9;&#x9;h.IdTempo as IdDataCaptura, &#xA;&#x9;&#x9;&#x9;&#x9;a.VlrBruto, a.VlrComissao, a.[VlrLi­quido], a.VlrRejeitado, &#xA;&#x9;&#x9;&#x9;&#x9;replace(replace(a.Taxa, '%', ''), ',', '.') as TaxaTransacao,&#xA;&#x9;&#x9;&#x9;&#x9;replace(replace(a.TxContrato, '%', ''), ',', '.') as TaxaContrato&#xA;&#x9;&#x9;from dsTransacaoAdquirente a&#xA;&#x9;&#x9;inner join dimTransacaoAdquirente b on a.IDEQUALS = b.IDEQUALS&#xA;&#x9;&#x9;left join dimAdquirente c on a.Adquirente = c.Adquirente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Estabelecimento = c.Estabelecimento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NroTerminal = c.NumeroTerminal&#xA;&#x9;&#x9;left join dimProduto d on a.Tipo = d.Tipo&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Produto = d.Produto&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.Bandeira = d.Bandeira&#xA;&#x9;&#x9;left join dimMeioCaptura e on a.MeioCaptura = e.MeioCaptura&#xA;&#x9;&#x9;left join dimTempo f on convert(date, a.Data) = convert(date, f.Data)&#xA;&#x9;&#x9;left join dimTempo g on convert(date, a.DtSituacao) = convert(date, g.Data)&#xA;&#x9;&#x9;left join dimTempo h on convert(date, a.DtCaptura) = convert(date, h.Data)&#xA;&#x9;&#x9;) AS Source (IdTransacaoAdquirente &#xA;&#x9;&#x9;&#x9;,IdAdquirente &#xA;&#x9;&#x9;&#x9;,IdProduto &#xA;&#x9;&#x9;&#x9;,IdMeioCaptura &#xA;&#x9;&#x9;&#x9;,IdDataVenda &#xA;&#x9;&#x9;&#x9;,IdDataSituacao &#xA;&#x9;&#x9;&#x9;,IdDataCaptura&#xA;&#x9;&#x9;&#x9;,VlrBruto&#xA;&#x9;&#x9;&#x9;,VlrComissao&#xA;&#x9;&#x9;&#x9;,[VlrLi­quido],&#xA;&#x9;&#x9;&#x9;VlrRejeitado, &#xA;&#x9;&#x9;&#x9;TaxaTransacao, &#xA;&#x9;&#x9;&#x9;TaxaContrato)&#xA;ON (Target.IdTransacaoAdquirente = Source.IdTransacaoAdquirente)&#xA;&#xA;WHEN NOT MATCHED BY TARGET THEN&#xA; INSERT ([IdTransacaoAdquirente]&#xA;           ,[IdAdquirente]&#xA;           ,[IdProduto]&#xA;           ,[IdMeioCaptura]&#xA;           ,[IdDataVenda]&#xA;           ,[IdDataSituacao]&#xA;           ,[IdDataCaptura]&#xA;           ,[ValorBrutoAdquirente]&#xA;           ,[ValorComissaoAdquirente]&#xA;           ,[ValorLiquidoAdquirente]&#xA;           ,[ValorRejeitadoAdquirente]&#xA;&#x9;&#x9;   ,TaxaTransacao&#xA;&#x9;&#x9;   ,TaxaContrato)&#xA; VALUES (Source.[IdTransacaoAdquirente]&#xA;           ,Source.[IdAdquirente]&#xA;           ,Source.[IdProduto]&#xA;           ,Source.[IdMeioCaptura]&#xA;           ,Source.[IdDataVenda]&#xA;           ,Source.[IdDataSituacao]&#xA;           ,Source.[IdDataCaptura]&#xA;           ,Source.VlrBruto&#xA;           ,Source.VlrComissao&#xA;           ,Source.[VlrLi­quido]&#xA;           ,Source.VlrRejeitado&#xA;&#x9;&#x9;   ,Source.TaxaTransacao&#xA;&#x9;&#x9;   ,Source.TaxaContrato);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load fatTransacaoIR"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{6D553E8B-639E-4324-88DA-2F8B5D7BFFC2}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load fatTransacaoIR"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-- reset transações conciliadas duplicadas.&#xA;-------------------------------&#xA;select IdTransacaoIR, max(IdTransacaoAdquirente) as IdTransacaoAdquirente&#xA;into #tmp&#xA;from fatTransacaoAdquirente &#xA;where IdTransacaoIR &lt;&gt; -1 group by IdTransacaoIR having count(IdTransacaoAdquirente) &gt; 1&#xA;&#xA;update fatTransacaoAdquirente set IdTransacaoIR = -1&#xA;where IdTransacaoAdquirente in (select IdTransacaoAdquirente from #tmp)&#xA;&#xA;drop table #tmp&#xA;--------------------------------&#xA;&#xA;&#xA;&#xA;&#x9;update fatTransacaoIR&#xA;&#x9;&#x9;set IdDataVenda = d.IdTempo, &#xA;&#x9;&#x9;ValorBruto = a.ValorPagamento, &#xA;&#x9;&#x9;ValorLiquido = a.ValorLiquido, &#xA;&#x9;&#x9;ValorDiferenca = a.VlrDiferenca,&#xA;&#x9;&#x9;IdTransacaoAdquirente = isnull(b.IdTransacaoAdquirente, -1)&#xA;&#x9;from fatTransacaoIR e &#xA;&#x9;inner join dimTransacaoIR a on a.IdTransacaoIR = e.IdTransacaoIR&#xA;&#x9;left join fatTransacaoAdquirente b on a.IdTransacaoIR = b.IdTransacaoIR&#xA;&#x9;left join dimTempo c on a.DtTransacao = c.Data&#xA;&#x9;left join dimTempo d on a.DtVenda = d.Data&#xA;&#x9;where a.IdTransacaoIR &lt;&gt; -1&#xA;&#xA;&#x9;insert into fatTransacaoIR&#xA;&#x9;(IdTransacaoIR, IdTransacaoAdquirente, IdSituacao, IdDataTransacao, IdDataVenda, QtdeParcelas, QtdePagamento, ValorBruto, ValorLiquido, ValorDiferenca)&#xA;&#x9;select distinct a.IdTransacaoIR, &#xA;&#x9;&#x9;&#x9;isnull(b.IdTransacaoAdquirente, -1) as IdTransacaoAdquirente, &#xA;&#x9;&#x9;&#x9;isnull(b.IdSituacao, 2) as IdSituacao, &#xA;&#x9;&#x9;&#x9;c.IdTempo as IdDataTransacao, &#xA;&#x9;&#x9;&#x9;d.IdTempo as IdDataVenda, &#xA;&#x9;&#x9;&#x9;Parc as QtdeParcelas, &#xA;&#x9;&#x9;&#x9;a.QtdPagamentos as QtdePagamento, &#xA;&#x9;&#x9;&#x9;a.ValorPagamento as ValorBruto, &#xA;&#x9;&#x9;&#x9;a.ValorLiquido as ValorLiquido, &#xA;&#x9;&#x9;&#x9;a.VlrDiferenca as ValorDiferenca&#xA;&#x9;from dimTransacaoIR a&#xA;&#x9;left join fatTransacaoAdquirente b on a.IdTransacaoIR = b.IdTransacaoIR&#xA;&#x9;left join dimTempo c on a.DtTransacao = c.Data&#xA;&#x9;left join dimTempo d on a.DtVenda = d.Data&#xA;&#x9;left join fatTransacaoIR e on a.IdTransacaoIR = e.IdTransacaoIR&#xA;&#x9;where e.IdTransacaoIR is null&#xA;&#x9;and a.IdTransacaoIR  &lt;&gt; -1&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Match Lote Venda x Lote Pagto"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{1BDCAC24-18ED-40BA-8F3D-22AE0FBB7F8A}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Match Lote Venda x Lote Pagto"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="update fatTransacaoAdquirente&#xA;set IdLoteVenda = d.IdLoteVenda&#xA;from fatTransacaoAdquirente a&#xA;inner join dimTransacaoAdquirente b on a.IdTransacaoAdquirente = b.IdTransacaoAdquirente&#xA;inner join dimAdquirente c on a.IdAdquirente = c.IdAdquirente&#xA;inner join dimLoteVenda d on b.LoteRO = d.Lote&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and b.LoteUnico = d.LoteUnico&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and b.Adquirente = d.Adquirente&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and c.Estabelecimento = d.Estabelecimento&#xA;where isnull(a.IdLoteVenda, -1) = -1&#xA;&#xA;&#xA;-- Corrige a data na fatFluxoCaixa. Depois analisar onde colocar este update.&#xA;--update fatFluxoCaixa &#xA;--set IdDataLoteVenda = b.IdDataVenda&#xA;--from fatFluxoCaixa a&#xA;--inner join fatTransacaoAdquirente b on a.IdLoteVenda = b.IdLoteVenda&#xA;--where isnull(a.IdDataLoteVenda, -1) = -1 " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set Cancelamento Venda"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E9711B8A-CF4D-4156-833C-1E411BD52469}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set Cancelamento Venda"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-- Separando os cancelamentos&#xA;select distinct a.is_bileto, a.numero_venda_ir, a.data_cancelamento, a.numero_cancelamento_ir, a.valor_compra_cancelada_total&#xA;into #tmpCancelado&#xA;from dsVendaCanceladaLegado a&#xA;&#xA;insert into #tmpCancelado&#xA;select distinct a.is_bileto, a.numero_venda_ir, a.data_cancelamento, a.numero_cancelamento_ir, a.valor_compra_cancelada_total&#xA;from dsVendaCanceladaBileto a&#xA;&#xA;-- Criando score card cancelamento (legado)&#xA;select is_bileto, numero_venda_ir, sum(valor_compra_cancelada_total) as TotalCancelado, min(convert(date, data_cancelamento)) as DataPrimeiroCancelamento&#xA;into #tmp_CancelamentoScoreCard&#xA;from dsVendaCanceladaLegado &#xA;group by is_bileto, numero_venda_ir&#xA;&#xA;-- Score card cancelamento (bileto)&#xA;insert into #tmp_CancelamentoScoreCard&#xA;select is_bileto, numero_venda_ir, sum(valor_compra_cancelada_total) as TotalCancelado, min(convert(date, data_cancelamento)) as DataPrimeiroCancelamento&#xA;from dsVendaCanceladaBileto &#xA;group by is_bileto, numero_venda_ir&#xA;&#xA;-- Atualizando na dimVenda&#xA;update dimVenda&#xA;set IsCancelada = 1, &#xA;ValorCancelado = TotalCancelado, &#xA;DataCancelamento = DataPrimeiroCancelamento&#xA;from dimVenda a&#xA;inner join #tmp_CancelamentoScoreCard b on a.numero_venda_ir = b.numero_venda_ir&#xA;&#x9;&#x9;&#x9;and a.is_bileto = b.is_bileto&#xA;&#xA;update fatConciliacaoVenda&#xA;set ValorCanceladoVenda = c.TotalCancelado&#xA;from fatConciliacaoVenda a &#xA;inner join dimVenda b on a.IdVenda = b.IdVenda&#xA;inner join #tmp_CancelamentoScoreCard c on b.numero_venda_ir = c.numero_venda_ir&#xA;&#x9;&#x9;&#x9;and b.is_bileto = c.is_bileto&#xA;&#xA;drop table #tmpCancelado&#xA;drop table #tmp_CancelamentoScoreCard&#xA;&#xA;-- Para fins de comparação com valores capturados pela adquirente. &#xA;-- Quando uma transação é cancelada no mesmo dia, esta não é considerada pela Adquirente. &#xA;update dimVenda&#xA;set IsCanceladaMesmoDia = 1&#xA;where DataCancelamento is not null&#xA;and DATEDIFF(d, convert(date, data_compra), DataCancelamento) = 0" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\set Situacao"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{B9BD8451-9C0D-41DD-B533-0E3C38B28D82}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="set Situacao"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-------------------------------------------&#xA;-- fatTransacaoAdquirente&#xA;-------------------------------------------&#xA;&#xA;-- Em aberto&#xA;update fatTransacaoAdquirente&#xA;set IdSituacao = 2&#xA;where IdTransacaoIR = -1&#xA;and (IdSituacao = -1 or IdSituacao is null)&#xA;&#xA;-- Conciliado&#xA;update fatTransacaoAdquirente&#xA;set IdSituacao = 1&#xA;where IdTransacaoIR &lt;&gt; -1&#xA;and (IdSituacao = -1 or IdSituacao is null or IdSituacao = 2)&#xA;&#xA;-- Divergente&#xA;update fatTransacaoAdquirente&#xA;set IdSituacao = 3 &#xA;where IdTransacaoIR &lt;&gt; -1 &#xA;and (ValorBrutoAdquirente &lt;&gt; ValorBrutoIR or TaxaTransacao &lt;&gt; TaxaContrato or&#xA;&#x9;(round((ValorBrutoAdquirente * (TaxaTransacao/100.00)),2) - ValorComissaoAdquirente &gt;= 0.5 or round((ValorBrutoAdquirente * (TaxaTransacao/100.00)),2) - ValorComissaoAdquirente &lt;= -0.5)) -- Qnd a taxa calculada esta errada&#xA;and ValorBrutoIR &gt; 0&#xA;&#xA;-------------------------------------------&#xA;-- fatTransacaoIR&#xA;-------------------------------------------&#xA;&#xA;-- Em aberto&#xA;update fatTransacaoIR &#xA;set IdSituacao = 2&#xA;where IdSituacao = -1 or IdSituacao is null&#xA;&#xA;-- Dos conciliados, pega da fatTransacaoAdquirente&#xA;update fatTransacaoIR&#xA;set IdSituacao = b.IdSituacao&#xA;from fatTransacaoIR a&#xA;inner join fatTransacaoAdquirente b on a.IdTransacaoIR = b.IdTransacaoIR " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set StatusCancelamento"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C6DD6AA6-DA37-4098-BBF7-5CFDD09984D6}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set StatusCancelamento"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-- Set a soma do valor total de cancelamento de cada pedido. &#xA;select b.IdTransacaoAdquirente, &#xA;&#x9;&#x9;sum(ValorBrutoCancelado) as TotalCancelado, &#xA;&#x9;&#x9;sum(b.ValorLiquidoCancelado) as TotalCanceladoLiquido,&#xA;&#x9;&#x9;count(c.IdCancelamento) as Qtde&#xA;into #tmpCancelamento&#xA;from fatCancelamento b&#xA;inner join dimCancelamento c on b.IdCancelamento = c.IdCancelamento&#xA;where b.IdTransacaoAdquirente &lt;&gt; -1&#xA;and c.TipoCancelamento = 'Cancelamento'&#xA;group by b.IdTransacaoAdquirente, c.VlrBruto&#xA;&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 2,&#xA;&#x9;ValorCancelado = b.TotalCancelado,&#xA;&#x9;ValorCanceladoLiquido = b.TotalCanceladoLiquido,&#xA;&#x9;QtdeCancelamento = b.Qtde&#xA;from fatTransacaoAdquirente a&#xA;inner join #tmpCancelamento b on a.IdTransacaoAdquirente = b.IdTransacaoAdquirente &#xA;&#xA;truncate table #tmpCancelamento&#xA;&#xA;-- Set a soma de cbk de cada pedido. &#xA;insert into #tmpCancelamento&#xA;select&#x9;a.IdTransacaoAdquirente, &#xA;&#x9;&#x9;sum(ValorBrutoCancelado) as TotalChargeback, &#xA;&#x9;&#x9;sum(a.ValorLiquidoCancelado) as TotalChargebackLiquido, &#xA;&#x9;&#x9;COUNT(b.IdCancelamento) as Qtde&#xA;from fatCancelamento a&#xA;inner join dimCancelamento b on a.IdCancelamento = b.IdCancelamento&#xA;where IdTransacaoAdquirente &lt;&gt; -1&#xA;and b.TipoCancelamento = 'Chargeback'&#xA;group by IdTransacaoAdquirente, VlrBruto&#xA;order by IdTransacaoAdquirente&#xA;-- Update&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 3,&#xA;&#x9;ValorChargeback = b.TotalCancelado,&#xA;&#x9;ValorChargebackLiquido = b.TotalCanceladoLiquido,&#xA;&#x9;QtdeCBK = b.Qtde&#xA;from fatTransacaoAdquirente a&#xA;inner join #tmpCancelamento b on a.IdTransacaoAdquirente = b.IdTransacaoAdquirente &#xA;&#xA;truncate table #tmpCancelamento &#xA;&#xA;-- Set valor total de estornos de cada pedido (correções aplicadas pelas Adquirentes)&#xA;insert into #tmpCancelamento&#xA;select&#x9;a.IdTransacaoAdquirente,&#xA;&#x9;&#x9;sum(ValorBrutoCancelado) as TotalEstornado, &#xA;&#x9;&#x9;sum(ValorLiquidoCancelado) as TotalEstornadoLiquido, &#xA;&#x9;&#x9;0 as qtde&#xA;from fatCancelamento a&#xA;inner join dimCancelamento b on a.IdCancelamento = b.IdCancelamento&#xA;where IdTransacaoAdquirente &lt;&gt; -1&#xA;and b.TipoCancelamento like '%Estorno%'&#xA;group by IdTransacaoAdquirente, VlrBruto&#xA;order by IdTransacaoAdquirente&#xA;-- Update&#xA;update fatTransacaoAdquirente&#xA;set ValorEstornoCancelamento = b.TotalCancelado, &#xA;ValorEstornoLiquido = b.TotalCanceladoLiquido&#xA;from fatTransacaoAdquirente a&#xA;inner join #tmpCancelamento b on a.IdTransacaoAdquirente = b.IdTransacaoAdquirente&#xA;&#xA;truncate table #tmpCancelamento&#xA;&#xA;drop table #tmpCancelamento&#xA;&#xA;-- Set se é cancelamento a maior&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 4&#xA;where (ValorCancelado - ValorEstornoCancelamento) &gt; ValorBrutoAdquirente&#xA;&#xA;-- Set se é CBK a maior&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 8&#xA;where (ValorChargeback - ValorEstornoCancelamento) &gt; ValorBrutoAdquirente&#xA;&#xA;-- Set cancelamento + CBK (sem estorno)&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 5&#xA;where ValorCancelado &gt; 0 and ValorChargeback &gt; 0 and ValorEstornoCancelamento = 0&#xA;&#xA;-- Set cancelamento + CBK (com estorno)&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 9&#xA;where ValorCancelado &gt; 0 and ValorChargeback &gt; 0 and ValorEstornoCancelamento &gt; 0&#xA;&#xA;-- Set cancelamento parcial&#xA;update fatTransacaoAdquirente&#xA;set IdStatusCancelamento = 6&#xA;where ValorCancelado &gt; 0 and ValorCancelado &lt; ValorBrutoAdquirente" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set TransacaoIR fatTransacao"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{A8943E6E-A6C5-48E0-A54E-CEAC734E7347}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set TransacaoIR fatTransacao"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{D31E9785-7BAF-404F-A81A-B07A29CDECFA}"
          SQLTask:SqlStatementSource="-- Somente se tiver registro a ser atualizado&#xA;--declare @count as int&#xA;--select @Count = count(*) from dsTransacaoIR&#xA;&#xA;--if(@count &gt; 0) &#xA;--begin&#xA;&#xA;&#x9;-- Join via Autorizacao, NSU e (Data or LoteRO/LoteAdq)&#xA;&#x9;update fatTransacaoAdquirente&#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;and (a.DtCaptura = b.DtTransacao)&#xA;&#xA;&#x9;-- Join via TID, NSU e Autorizacao&#xA;&#x9;update fatTransacaoAdquirente &#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;and a.TID = b.TID&#xA;&#x9;where c.IdTransacaoIR = -1 and b.TID is not null&#xA;&#xA;&#x9;-- Join via NSU, Autorizacao e Lote&#xA;&#x9;update fatTransacaoAdquirente &#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.LoteRO = b.LoteAdq&#xA;&#x9;where c.IdTransacaoIR = -1 and b.LoteAdq is not null&#xA;&#xA;&#xA;&#x9;-- join via Bandeira, Autorizacao, Valor, Lote e dif. datas menor que 5 dias. &#xA;&#x9;-- Seleciona via Bandeira, Autorizacao, Valor, Lote e dif. datas menor que 5 dias. &#xA;&#x9;select distinct b.IdTransacaoIR, b.ValorPagamento, c.IdTransacaoAdquirente&#xA;&#x9;into #tmpFat&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.Bandeira = b.Bandeira&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and c.ValorBrutoAdquirente = b.ValorPagamento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and  a.LoteRO = b.LoteAdq&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, a.DtCaptura, b.DtTransacao) between -5 and 5 -- Limite de diferença de 5 dias. &#xA;&#x9;where c.IdTransacaoIR = -1 and b.Bandeira is not null and b.NroAutorizacao is not null &#xA;&#xA;&#x9;-- Deleta as transações que concidiram com alguma conciliada já.&#xA;&#x9;delete from #tmpFat where IdTransacaoIR in (&#xA;&#x9;&#x9;&#x9;select a.IdTransacaoIR from #tmpFat a&#xA;&#x9;&#x9;&#x9;inner join fatTransacaoAdquirente b on a.IdTransacaoIR = b.IdTransacaoIR&#xA;&#x9;&#x9;&#x9;)&#xA;&#x9;-- Correção manual. &#xA;&#x9;delete from #tmpFat where IdTransacaoAdquirente = 366636&#xA;&#xA;&#x9;-- Concilia &#xA;&#x9;update fatTransacaoAdquirente&#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente a&#xA;&#x9;inner join #tmpFat b on a.IdTransacaoAdquirente = b.IdTransacaoAdquirente&#xA;&#x9;where a.IdTransacaoIR = -1 &#xA;&#xA;&#x9;drop table #tmpFat&#xA;&#xA;&#x9;-- Concilia via manipulacao do NroAutorizacao transações ainda em aberto. &#xA;&#x9;update fatTransacaoAdquirente&#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimAdquirente f on c.IdAdquirente = f.IdAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.LoteRO = b.LoteAdq&#xA;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;and (a.DtCaptura = b.DtTransacao)&#xA;&#x9;&#x9;&#x9;and c.ValorBrutoAdquirente = b.ValorPagamento&#xA;&#x9;&#x9;&#x9;and REPLACE(a.NroAutorizacao, '00', '') = REPLACE(b.NroAutorizacao, '00', '')&#xA;&#x9;where c.IdTransacaoIR = -1&#xA;&#xA;&#x9;-- join via Bandeira, NSU, Valor, Lote, Estabelecimento e dif. datas (data = dtTransacao) menor que 5 dias. &#xA;&#x9;update fatTransacaoAdquirente&#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimAdquirente d on c.IdAdquirente = d.IdAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.Bandeira = b.Bandeira&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and c.ValorBrutoAdquirente = b.ValorPagamento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and  a.LoteRO = b.LoteAdq&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, a.Data, b.DtTransacao) between -5 and 5 -- Limite de diferença de 5 dias. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and d.Estabelecimento = b.Estabelecimento&#xA;&#x9;where c.IdTransacaoIR = -1 and b.Bandeira is not null and b.NSU is not null &#xA;&#xA;&#x9;-- join via NSU, Valor, Lote, Estabelecimento e dif. datas (data = dtTransacao) menor que 5 dias. &#xA;&#x9;update fatTransacaoAdquirente&#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimAdquirente d on c.IdAdquirente = d.IdAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.NSU = b.NSU&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and c.ValorBrutoAdquirente = b.ValorPagamento&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and  a.LoteRO = b.LoteAdq&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and DATEDIFF(d, a.Data, b.DtTransacao) between -5 and 5 -- Limite de diferença de 5 dias. &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and d.Estabelecimento = b.Estabelecimento&#xA;&#x9;where c.IdTransacaoIR = -1 and b.NSU is not null &#xA;&#xA;&#x9;-- join via Autorizacao, Valor, Bandeira, Adquirente (Somente para Rede) e dif. datas (data = dtTransacao) menor ou igual que 2 dias. &#xA;&#x9;update fatTransacaoAdquirente&#xA;&#x9;set IdTransacaoIR = b.IdTransacaoIR, &#xA;&#x9;ValorBrutoIR = b.ValorPagamento&#xA;&#x9;from fatTransacaoAdquirente c &#xA;&#x9;inner join dimTransacaoAdquirente a on c.IdTransacaoAdquirente = a.IdTransacaoAdquirente&#xA;&#x9;inner join dimTransacaoIR b on a.NroAutorizacao = b.NroAutorizacao&#xA;&#x9;&#x9;&#x9;and DATEDIFF(d, a.DtCaptura, b.DtTransacao) between -2 and 2 -- Limite de diferença de 5 dias. &#xA;&#x9;&#x9;&#x9;and c.ValorBrutoAdquirente = b.ValorPagamento&#xA;&#x9;&#x9;&#x9;and a.Bandeira = b.Bandeira&#xA;&#x9;&#x9;&#x9;and a.Adquirente = b.Adquirente&#xA;&#x9;where c.IdTransacaoIR = -1&#xA;&#x9;and a.Adquirente = 'Rede'&#xA;&#xA;--end " xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{E67EF02C-054D-40AE-9E23-F5C501F9D169}"
      DTS:From="Package\Load dimTransacaoAdquirente"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{967DE955-C59C-462F-8AB0-F3F250A93E9E}"
      DTS:From="Package\Load dimAdquirente"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Load fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 10]"
      DTS:CreationName=""
      DTS:DTSID="{B2504928-2EDC-4B4A-8CCE-E3EDFA55D0E3}"
      DTS:From="Package\Load dimCancelamento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 10"
      DTS:To="Package\Load fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 11]"
      DTS:CreationName=""
      DTS:DTSID="{1A4F0BE9-05E7-4E26-BE6C-A9F2B4E06B68}"
      DTS:From="Package\Set StatusCancelamento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 11"
      DTS:To="Package\Clear DS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 12]"
      DTS:CreationName=""
      DTS:DTSID="{4E73A976-6A5C-4958-B706-B916732E8BEC}"
      DTS:From="Package\set Situacao"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 12"
      DTS:To="Package\Load fatCancelamento" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 13]"
      DTS:CreationName=""
      DTS:DTSID="{DC9C4B66-4A48-4C90-9C9B-3F844EC39B7E}"
      DTS:From="Package\Load fatCancelamento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 13"
      DTS:To="Package\Clear dimTransacaoIRNaoConciliada" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 14]"
      DTS:CreationName=""
      DTS:DTSID="{D0785EFA-8945-4CE4-8DC0-17006C6C8EC6}"
      DTS:From="Package\Clear dimTransacaoIRNaoConciliada"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 14"
      DTS:To="Package\Set StatusCancelamento" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 15]"
      DTS:CreationName=""
      DTS:DTSID="{8FB30DEF-B98C-4ACB-B9E0-CE41ADA94D2E}"
      DTS:From="Package\Load dimLoteVenda"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 15"
      DTS:To="Package\Load fatFluxoCaixa" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 16]"
      DTS:CreationName=""
      DTS:DTSID="{5CE793A9-3C95-4638-A2D9-9F76EEEEA3C9}"
      DTS:From="Package\Load dimDomicilioBancario"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 16"
      DTS:To="Package\Load fatFluxoCaixa" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 17]"
      DTS:CreationName=""
      DTS:DTSID="{E4091AB6-DE2A-439A-9403-BA0BC59CA7E9}"
      DTS:From="Package\Load dimProduto"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 17"
      DTS:To="Package\Load fatFluxoCaixa" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 18]"
      DTS:CreationName=""
      DTS:DTSID="{6FE31327-EE1E-4F05-BAD6-8B6410694361}"
      DTS:From="Package\Load fatFluxoCaixa"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 18"
      DTS:To="Package\Match Lote Venda x Lote Pagto" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 19]"
      DTS:CreationName=""
      DTS:DTSID="{B871DB84-4E53-4066-9D38-C98B6D3017D8}"
      DTS:From="Package\Match Lote Venda x Lote Pagto"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 19"
      DTS:To="Package\Clear DS" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{7ED09D32-1418-49E5-A82C-FE01B4A1E145}"
      DTS:From="Package\Load dimProduto"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Load fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 20]"
      DTS:CreationName=""
      DTS:DTSID="{4EC1236F-0025-42EE-8BD6-27E294B0CB21}"
      DTS:From="Package\Load dimVenda (Legado)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 20"
      DTS:To="Package\Load dimVenda (Bileto)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 21]"
      DTS:CreationName=""
      DTS:DTSID="{0122BE68-8E56-470E-8010-E4A990F5D1DF}"
      DTS:From="Package\Load dimPagamento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 21"
      DTS:To="Package\Load fatConciliacaoVenda" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 22]"
      DTS:CreationName=""
      DTS:DTSID="{CEB72502-B606-4CFF-91E9-9AF0D648E692}"
      DTS:From="Package\Set StatusCancelamento"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 22"
      DTS:To="Package\Load fatConciliacaoVenda" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 23]"
      DTS:CreationName=""
      DTS:DTSID="{E57FDE7E-2A4E-4B0D-846B-9E25EDE2B2C7}"
      DTS:From="Package\Match Lote Venda x Lote Pagto"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 23"
      DTS:To="Package\Load fatConciliacaoVenda" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 24]"
      DTS:CreationName=""
      DTS:DTSID="{7DADD66F-AE02-49AF-9AB6-7332499846D2}"
      DTS:From="Package\Load fatConciliacaoVenda"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 24"
      DTS:To="Package\Set Cancelamento Venda" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 25]"
      DTS:CreationName=""
      DTS:DTSID="{0A8F116D-2AA3-4093-96B2-42EA7EE701D0}"
      DTS:From="Package\Set Cancelamento Venda"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 25"
      DTS:To="Package\Load fatConciliacaoLoteVenda" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 26]"
      DTS:CreationName=""
      DTS:DTSID="{2A55F466-F998-434F-B035-78F46557474A}"
      DTS:From="Package\Load dimVenda (Bileto)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 26"
      DTS:To="Package\Load fatConciliacaoVenda" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 27]"
      DTS:CreationName=""
      DTS:DTSID="{1386EF23-A005-4A02-985E-E41230549EB3}"
      DTS:From="Package\Load fatConciliacaoLoteVenda"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 27"
      DTS:To="Package\Clear DS Sales IR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 28]"
      DTS:CreationName=""
      DTS:DTSID="{09984094-5923-4DF7-B45D-A9E458143F92}"
      DTS:From="Package\Load fatTransacao"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 28"
      DTS:To="Package\Match Lote Venda x Lote Pagto" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{7ED10D96-44F2-43C5-84E6-DE138F31AC8A}"
      DTS:From="Package\Load dimMeioCaptura"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\Load fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{951A7974-D3BC-4BB6-A0F4-CEA1ADBC82BA}"
      DTS:From="Package\Load dimTempo"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\Load fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{A038B422-1958-4A41-972F-ECF27AC6410E}"
      DTS:From="Package\Load fatTransacao"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\Load dimTransacaoIRNaoConciliada" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{AE961270-C11A-4966-960F-84039A241C81}"
      DTS:From="Package\Load dimTransacaoIRNaoConciliada"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\Load dimTransacaoIR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{B1032E94-D494-47C3-9F98-BCDACA479AA0}"
      DTS:From="Package\Load dimTransacaoIR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Set TransacaoIR fatTransacao" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 8]"
      DTS:CreationName=""
      DTS:DTSID="{8D2D945B-A392-4027-B596-27BE49CCE160}"
      DTS:From="Package\Set TransacaoIR fatTransacao"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 8"
      DTS:To="Package\Load fatTransacaoIR" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 9]"
      DTS:CreationName=""
      DTS:DTSID="{4A915A5A-5B93-4455-BDBE-870E8E4E1AF8}"
      DTS:From="Package\Load fatTransacaoIR"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 9"
      DTS:To="Package\set Situacao" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="248,42"
          Id="Package\Clear dimTransacaoIRNaoConciliada"
          TopLeft="800.857142857143,309.142857142857" />
        <NodeLayout
          Size="119,42"
          Id="Package\Clear DS"
          TopLeft="545.178571428572,518.84126984127" />
        <NodeLayout
          Size="165,42"
          Id="Package\Clear DS Sales IR"
          TopLeft="1453,679" />
        <NodeLayout
          Size="173,42"
          Id="Package\Load dimAdquirente"
          TopLeft="771.75,74" />
        <NodeLayout
          Size="189,42"
          Id="Package\Load dimCancelamento"
          TopLeft="1390,68" />
        <NodeLayout
          Size="205,42"
          Id="Package\Load dimDomicilioBancario"
          TopLeft="188.571428571429,138.857142857143" />
        <NodeLayout
          Size="172,42"
          Id="Package\Load dimLoteVenda"
          TopLeft="171.857142857143,229.285714285714" />
        <NodeLayout
          Size="181,42"
          Id="Package\Load dimMeioCaptura"
          TopLeft="964.75,74" />
        <NodeLayout
          Size="177,42"
          Id="Package\Load dimPagamento"
          TopLeft="1911.5,70.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Load dimProduto"
          TopLeft="363.75,79.5714285714286" />
        <NodeLayout
          Size="155,42"
          Id="Package\Load dimTempo"
          TopLeft="1188.75,70" />
        <NodeLayout
          Size="222,42"
          Id="Package\Load dimTransacaoAdquirente"
          TopLeft="537.75,77" />
        <NodeLayout
          Size="181,42"
          Id="Package\Load dimTransacaoIR"
          TopLeft="1261.03571428571,219.714285714286" />
        <NodeLayout
          Size="247,42"
          Id="Package\Load dimTransacaoIRNaoConciliada"
          TopLeft="979.75,220" />
        <NodeLayout
          Size="191,42"
          Id="Package\Load dimVenda (Bileto)"
          TopLeft="1682,160" />
        <NodeLayout
          Size="199,42"
          Id="Package\Load dimVenda (Legado)"
          TopLeft="1674,74" />
        <NodeLayout
          Size="184,42"
          Id="Package\Load fatCancelamento"
          TopLeft="1077,307" />
        <NodeLayout
          Size="221,42"
          Id="Package\Load fatConciliacaoLoteVenda"
          TopLeft="1183,681" />
        <NodeLayout
          Size="201,42"
          Id="Package\Load fatConciliacaoVenda"
          TopLeft="1187,533" />
        <NodeLayout
          Size="168,42"
          Id="Package\Load fatFluxoCaixa"
          TopLeft="470.714285714286,226.714285714286" />
        <NodeLayout
          Size="166,42"
          Id="Package\Load fatTransacao"
          TopLeft="732.75,222" />
        <NodeLayout
          Size="176,42"
          Id="Package\Load fatTransacaoIR"
          TopLeft="1493,307.142857142857" />
        <NodeLayout
          Size="172,42"
          Id="Package\Match Lote Venda x Lote Pagto"
          TopLeft="471.714285714286,305.571428571429" />
        <NodeLayout
          Size="199,42"
          Id="Package\Set Cancelamento Venda"
          TopLeft="1191,606" />
        <NodeLayout
          Size="136,42"
          Id="Package\set Situacao"
          TopLeft="1295.66666666667,306.333333333333" />
        <NodeLayout
          Size="193,42"
          Id="Package\Set StatusCancelamento"
          TopLeft="826.892857142857,380.464285714286" />
        <NodeLayout
          Size="221,42"
          Id="Package\Set TransacaoIR fatTransacao"
          TopLeft="1469.46428571429,220.285714285714" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="648.75,119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="133.142857142857,103"
              Start="0,0"
              End="133.142857142857,95.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.6951351351352" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.6951351351352"
                    Point2="0,38.6951351351352"
                    Point3="4,38.6951351351352" />
                  <mssgle:LineSegment
                    End="129.142857142857,38.6951351351352" />
                  <mssgle:CubicBezierSegment
                    Point1="129.142857142857,38.6951351351352"
                    Point2="133.142857142857,38.6951351351352"
                    Point3="133.142857142857,42.6951351351352" />
                  <mssgle:LineSegment
                    End="133.142857142857,95.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="858.25,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-53.7857142857142,106"
              Start="0,0"
              End="-53.7857142857142,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.8661126500461" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.8661126500461"
                    Point2="0,43.8661126500461"
                    Point3="-4,43.8661126500461" />
                  <mssgle:LineSegment
                    End="-49.7857142857142,43.8661126500461" />
                  <mssgle:CubicBezierSegment
                    Point1="-49.7857142857142,43.8661126500461"
                    Point2="-53.7857142857142,43.8661126500461"
                    Point3="-53.7857142857142,47.8661126500461" />
                  <mssgle:LineSegment
                    End="-53.7857142857142,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 10]"
          TopLeft="1484.5,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-612.321428571429,112"
              Start="0,0"
              End="-612.321428571429,104.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,80.8396349413298" />
                  <mssgle:CubicBezierSegment
                    Point1="0,80.8396349413298"
                    Point2="0,84.8396349413298"
                    Point3="-4,84.8396349413298" />
                  <mssgle:LineSegment
                    End="-608.321428571429,84.8396349413298" />
                  <mssgle:CubicBezierSegment
                    Point1="-608.321428571429,84.8396349413298"
                    Point2="-612.321428571429,84.8396349413298"
                    Point3="-612.321428571429,88.8396349413298" />
                  <mssgle:LineSegment
                    End="-612.321428571429,104.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 11]"
          TopLeft="892.559523809524,422.464285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-269.380952380952,96.376984126984"
              Start="0,0"
              End="-269.380952380952,88.876984126984">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.8861777561122" />
                  <mssgle:CubicBezierSegment
                    Point1="0,43.8861777561122"
                    Point2="0,47.8861777561122"
                    Point3="-4,47.8861777561122" />
                  <mssgle:LineSegment
                    End="-265.380952380952,47.8861777561122" />
                  <mssgle:CubicBezierSegment
                    Point1="-265.380952380952,47.8861777561122"
                    Point2="-269.380952380952,47.8861777561122"
                    Point3="-269.380952380952,51.8861777561122" />
                  <mssgle:LineSegment
                    End="-269.380952380952,88.876984126984" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 12]"
          TopLeft="1295.66666666667,327.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.666666666667,0"
              Start="0,0"
              End="-27.166666666667,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-27.166666666667,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 13]"
          TopLeft="1077,329.071428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-28.1428571428569,0"
              Start="0,0"
              End="-20.6428571428569,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-20.6428571428569,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 14]"
          TopLeft="924.125,351.142857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.3214285714287"
              Start="0,0"
              End="0,21.8214285714287">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.8214285714287" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 15]"
          TopLeft="343.857142857143,249">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="126.857142857143,0"
              Start="0,0"
              End="119.357142857143,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="119.357142857143,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 16]"
          TopLeft="291.071428571429,180.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="263.642857142857,45.8571428571428"
              Start="0,0"
              End="263.642857142857,38.3571428571428">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.9285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.9285714285714"
                    Point2="0,22.9285714285714"
                    Point3="4,22.9285714285714" />
                  <mssgle:LineSegment
                    End="259.642857142857,22.9285714285714" />
                  <mssgle:CubicBezierSegment
                    Point1="259.642857142857,22.9285714285714"
                    Point2="263.642857142857,22.9285714285714"
                    Point3="263.642857142857,26.9285714285714" />
                  <mssgle:LineSegment
                    End="263.642857142857,38.3571428571428" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 17]"
          TopLeft="418.083333333333,121.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="176.630952380952,105.142857142857"
              Start="0,0"
              End="176.630952380952,97.6428571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5226990821136" />
                  <mssgle:CubicBezierSegment
                    Point1="0,55.5226990821136"
                    Point2="0,59.5226990821136"
                    Point3="4,59.5226990821136" />
                  <mssgle:LineSegment
                    End="172.630952380952,59.5226990821136" />
                  <mssgle:CubicBezierSegment
                    Point1="172.630952380952,59.5226990821136"
                    Point2="176.630952380952,59.5226990821136"
                    Point3="176.630952380952,63.5226990821136" />
                  <mssgle:LineSegment
                    End="176.630952380952,97.6428571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 18]"
          TopLeft="556.214285714286,268.714285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.8571428571429"
              Start="0,0"
              End="0,29.3571428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.3571428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 19]"
          TopLeft="530.380952380953,347.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="55.7976190476194,171.269841269841"
              Start="0,0"
              End="55.7976190476194,163.769841269841">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,133.203694906308" />
                  <mssgle:CubicBezierSegment
                    Point1="0,133.203694906308"
                    Point2="0,137.203694906308"
                    Point3="4,137.203694906308" />
                  <mssgle:LineSegment
                    End="51.7976190476194,137.203694906308" />
                  <mssgle:CubicBezierSegment
                    Point1="51.7976190476194,137.203694906308"
                    Point2="55.7976190476194,137.203694906308"
                    Point3="55.7976190476194,141.203694906308" />
                  <mssgle:LineSegment
                    End="55.7976190476194,163.769841269841" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="468.416666666667,121.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="290.904761904762,100.428571428571"
              Start="0,0"
              End="290.904761904762,92.9285714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.3921575677385" />
                  <mssgle:CubicBezierSegment
                    Point1="0,64.3921575677385"
                    Point2="0,68.3921575677385"
                    Point3="4,68.3921575677385" />
                  <mssgle:LineSegment
                    End="286.904761904762,68.3921575677385" />
                  <mssgle:CubicBezierSegment
                    Point1="286.904761904762,68.3921575677385"
                    Point2="290.904761904762,68.3921575677385"
                    Point3="290.904761904762,72.3921575677385" />
                  <mssgle:LineSegment
                    End="290.904761904762,92.9285714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 20]"
          TopLeft="1775.5,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 21]"
          TopLeft="2000,112.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-664.25,420.5"
              Start="0,0"
              End="-664.25,413">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,272.662847790507" />
                  <mssgle:CubicBezierSegment
                    Point1="0,272.662847790507"
                    Point2="0,276.662847790507"
                    Point3="-4,276.662847790507" />
                  <mssgle:LineSegment
                    End="-660.25,276.662847790507" />
                  <mssgle:CubicBezierSegment
                    Point1="-660.25,276.662847790507"
                    Point2="-664.25,276.662847790507"
                    Point3="-664.25,280.662847790507" />
                  <mssgle:LineSegment
                    End="-664.25,413" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 22]"
          TopLeft="954.22619047619,422.464285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="313.97380952381,110.535714285714"
              Start="0,0"
              End="313.97380952381,103.035714285714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.5344846611133" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.5344846611133"
                    Point2="0,50.5344846611133"
                    Point3="4,50.5344846611133" />
                  <mssgle:LineSegment
                    End="309.97380952381,50.5344846611133" />
                  <mssgle:CubicBezierSegment
                    Point1="309.97380952381,50.5344846611133"
                    Point2="313.97380952381,50.5344846611133"
                    Point3="313.97380952381,54.5344846611133" />
                  <mssgle:LineSegment
                    End="313.97380952381,103.035714285714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 23]"
          TopLeft="585.047619047619,347.571428571429">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="644.552380952381,185.428571428571"
              Start="0,0"
              End="644.552380952381,177.928571428571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.365335070804" />
                  <mssgle:CubicBezierSegment
                    Point1="0,110.365335070804"
                    Point2="0,114.365335070804"
                    Point3="4,114.365335070804" />
                  <mssgle:LineSegment
                    End="640.552380952381,114.365335070804" />
                  <mssgle:CubicBezierSegment
                    Point1="640.552380952381,114.365335070804"
                    Point2="644.552380952381,114.365335070804"
                    Point3="644.552380952381,118.365335070804" />
                  <mssgle:LineSegment
                    End="644.552380952381,177.928571428571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 24]"
          TopLeft="1289,575">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 25]"
          TopLeft="1292,648">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 26]"
          TopLeft="1777.5,202">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-470.7,331"
              Start="0,0"
              End="-470.7,323.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,179.079251513484" />
                  <mssgle:CubicBezierSegment
                    Point1="0,179.079251513484"
                    Point2="0,183.079251513484"
                    Point3="-4,183.079251513484" />
                  <mssgle:LineSegment
                    End="-466.7,183.079251513484" />
                  <mssgle:CubicBezierSegment
                    Point1="-466.7,183.079251513484"
                    Point2="-470.7,183.079251513484"
                    Point3="-470.7,187.079251513484" />
                  <mssgle:LineSegment
                    End="-470.7,323.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 27]"
          TopLeft="1404,701">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="49,0"
              Start="0,0"
              End="41.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="41.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 28]"
          TopLeft="815.75,264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-230.702380952381,41.571428571429"
              Start="0,0"
              End="-230.702380952381,34.071428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.7129690585914" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.7129690585914"
                    Point2="0,24.7129690585914"
                    Point3="-4,24.7129690585914" />
                  <mssgle:LineSegment
                    End="-226.702380952381,24.7129690585914" />
                  <mssgle:CubicBezierSegment
                    Point1="-226.702380952381,24.7129690585914"
                    Point2="-230.702380952381,24.7129690585914"
                    Point3="-230.702380952381,28.7129690585914" />
                  <mssgle:LineSegment
                    End="-230.702380952381,34.071428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="1055.25,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-228.214285714286,106"
              Start="0,0"
              End="-228.214285714286,98.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.8661126500461" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.8661126500461"
                    Point2="0,56.8661126500461"
                    Point3="-4,56.8661126500461" />
                  <mssgle:LineSegment
                    End="-224.214285714286,56.8661126500461" />
                  <mssgle:CubicBezierSegment
                    Point1="-224.214285714286,56.8661126500461"
                    Point2="-228.214285714286,56.8661126500461"
                    Point3="-228.214285714286,60.8661126500461" />
                  <mssgle:LineSegment
                    End="-228.214285714286,98.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="1266.25,112">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-416.642857142857,110"
              Start="0,0"
              End="-416.642857142857,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.0918918918919" />
                  <mssgle:CubicBezierSegment
                    Point1="0,65.0918918918919"
                    Point2="0,69.0918918918919"
                    Point3="-4,69.0918918918919" />
                  <mssgle:LineSegment
                    End="-412.642857142857,69.0918918918919" />
                  <mssgle:CubicBezierSegment
                    Point1="-412.642857142857,69.0918918918919"
                    Point2="-416.642857142857,69.0918918918919"
                    Point3="-416.642857142857,73.0918918918919" />
                  <mssgle:LineSegment
                    End="-416.642857142857,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="898.75,242">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="81,0"
              Start="0,0"
              End="73.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="73.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="1226.75,240.857142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="34.2857142857142,0"
              Start="0,0"
              End="26.7857142857142,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="26.7857142857142,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="1442.03571428571,241">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27.4285714285802,0"
              Start="0,0"
              End="19.9285714285802,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="19.9285714285802,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 8]"
          TopLeft="1580.48214285714,262.285714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.857142857143"
              Start="0,0"
              End="0,37.357142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.357142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 9]"
          TopLeft="1493,327.738095238095">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-61.333333333333,0"
              Start="0,0"
              End="-53.833333333333,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-53.833333333333,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Já possui carga de 1/17  - 12/17"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="221,40"
          Id="6a390957-76cd-49ec-944f-eb7f0c9258e3"
          TopLeft="1137.75,29" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>